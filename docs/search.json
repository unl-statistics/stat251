[
  {
    "objectID": "exam/2023-midterm/index.html",
    "href": "exam/2023-midterm/index.html",
    "title": "Practice Exam (2023)",
    "section": "",
    "text": "Your goal on this exam is to demonstrate competency in as many of the objectives of chapters we’ve covered in this class so far as you can."
  },
  {
    "objectID": "exam/2023-midterm/index.html#ground-rules",
    "href": "exam/2023-midterm/index.html#ground-rules",
    "title": "Practice Exam (2023)",
    "section": "Ground Rules",
    "text": "Ground Rules\n\nYou may use the textbook and the internet (but the same rules apply - you must be able to explain your answer!)\nYou may NOT confer with other people or AI entities - including posting on StackOverflow, Reddit, etc.\nYou may ask clarifying questions of Dr. Vanderplas by email/zoom or in person\nYou may use R or Python for any of these tasks, but your code must be reproducible - I must be able to run your quarto file on my machine. I have provided R chunks in the correct locations in this file - change them to Python if you wish.\nFor any plot or table you create, be sure to appropriately caption and label it, providing 1-2 sentences to highlight the main purpose/conclusions you can draw from that plot.\nYou should have at least one code chunk for each ## heading below."
  },
  {
    "objectID": "exam/2023-midterm/index.html#read-in-the-data",
    "href": "exam/2023-midterm/index.html#read-in-the-data",
    "title": "Practice Exam (2023)",
    "section": "Read in the Data",
    "text": "Read in the Data\nWrite code which will:\n\nDownload the raw pocket measurements.csv data to a file in this repository\nRead the data in, ensuring that columns containing numbers are appropriately formatted. You may consider the fabric column as a character string."
  },
  {
    "objectID": "exam/2023-midterm/index.html#conduct-an-exploratory-data-analysis",
    "href": "exam/2023-midterm/index.html#conduct-an-exploratory-data-analysis",
    "title": "Practice Exam (2023)",
    "section": "Conduct an Exploratory Data Analysis",
    "text": "Conduct an Exploratory Data Analysis\nGenerate at least 3 questions about the data set and find answers to those questions using charts, tables, or numerical summaries.\n\nQuestions\n\n\n\n\n\n\n\nQuestion Answers\nYour discussion of this output goes here.\nYour discussion of this output goes here.\nYour discussion of this output goes here"
  },
  {
    "objectID": "exam/2023-midterm/index.html#comparing-sexes-and-styles",
    "href": "exam/2023-midterm/index.html#comparing-sexes-and-styles",
    "title": "Practice Exam (2023)",
    "section": "Comparing Sexes and Styles",
    "text": "Comparing Sexes and Styles\nGenerate one or two plots which best showcase the difference in pocket sizes for different sexes and styles of pants. Use The Pudding’s classification for pants styles, treating straight and boot-cut styles as the same and skinny and slim styles as the same.\nYou may annotate the plot with the output from statistical tests if you wish, but it is sufficient to highlight the visual differences. Your chart(s) must have appropriate titles and axis labels, and must be constructed to take into account the principles of good graphics discussed in the textbook.\nYour discussion of this output goes here.\nReplace this paragraph with 1-2 sentences discussing what choices you made to make the plot you generated above perceptually optimal. Which principles of good graphics did you use?"
  },
  {
    "objectID": "slides/02a-review-topics.html#working-environment",
    "href": "slides/02a-review-topics.html#working-environment",
    "title": "Programming Review",
    "section": "Working Environment",
    "text": "Working Environment\n\nKnow the 3 different ways to execute code from within RStudio\n\nTerminal (Command Line)\nSource Script (RStudio Button)\nInteractive Mode (line by line)\n\nDifferentiate between the Console and the Terminal\nDifferentiate between R and Python in the Console"
  },
  {
    "objectID": "slides/02a-review-topics.html#rstudio-projects",
    "href": "slides/02a-review-topics.html#rstudio-projects",
    "title": "Programming Review",
    "section": "RStudio Projects",
    "text": "RStudio Projects\nRStudio projects are a way to keep your work organized.\nLet’s create one for this week’s class work.\n\nCreating an RStudio Project"
  },
  {
    "objectID": "slides/02a-review-topics.html#general-programming",
    "href": "slides/02a-review-topics.html#general-programming",
    "title": "Programming Review",
    "section": "General Programming",
    "text": "General Programming\nReview: General Programming\nKnow how to:\n\nDefine a variable\nWrite a function\nWrite an if/else statement\nload a package or import a library\nCreate a data table structure\nGet a column, row, or value from a data table\nGet an item from a list"
  },
  {
    "objectID": "slides/02a-review-topics.html#self-assessment",
    "href": "slides/02a-review-topics.html#self-assessment",
    "title": "Programming Review",
    "section": "Self-assessment",
    "text": "Self-assessment\nIt’s sometimes hard to know what you know and what you don’t know\nSelf-assessment in Canvas: due by Feb 6"
  },
  {
    "objectID": "slides/02a-review-topics.html#homework-2",
    "href": "slides/02a-review-topics.html#homework-2",
    "title": "Programming Review",
    "section": "Homework 2",
    "text": "Homework 2\n\nFocus on the logic and thinking through the steps\nWork with pencil and paper first"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#introduce-yourself",
    "href": "slides/01-Syllabus-and-Introductions.html#introduce-yourself",
    "title": "Introduction",
    "section": "Introduce yourself!",
    "text": "Introduce yourself!\n\nName / Year / Major\nWhat do you hope to learn in this class?\nPrevious computing experience?\nIs a poptart a ravioli? Why or why not?"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#my-introduction",
    "href": "slides/01-Syllabus-and-Introductions.html#my-introduction",
    "title": "Introduction",
    "section": "My Introduction",
    "text": "My Introduction\n\nHeike Hofmann\nProfessor in Statistics\nAt UNL since August, I was at ISU for 20 years\nfirst computer language was Pascal :)\nR user since 1996, Python user (? I have learned it four times by now)"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#on-poptarts-and-ravioli",
    "href": "slides/01-Syllabus-and-Introductions.html#on-poptarts-and-ravioli",
    "title": "Introduction",
    "section": "On PopTarts and Ravioli:",
    "text": "On PopTarts and Ravioli:\n\nThe Cube Rule of Food, from RedditThus, a PopTart is a calzone."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#contact-info",
    "href": "slides/01-Syllabus-and-Introductions.html#contact-info",
    "title": "Introduction",
    "section": "Contact Info",
    "text": "Contact Info\n\nEmail: hhofmann4@unl.edu\nOffice: 346D Hardin Hall North Wing\nOffice Hours: TBD"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-objectives",
    "href": "slides/01-Syllabus-and-Introductions.html#course-objectives",
    "title": "Introduction",
    "section": "Course Objectives",
    "text": "Course Objectives\n\n\nUse appropriate visualizations to explore and assess data and its applicability to a problem\n\n\n\n\nWrite code to reshape and reformat moderately complex and/or messy data in a reproducible manner\n\n\n\n\nCreate graphical displays to explore data, assess statistical models, and present model results\n\n\n\n\nAdapt pre-existing code for sophisticated visualizations to new data."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-objectives-1",
    "href": "slides/01-Syllabus-and-Introductions.html#course-objectives-1",
    "title": "Introduction",
    "section": "Course Objectives",
    "text": "Course Objectives\n\n\nImplement an algorithm or procedure for data modification given in pseudocode\n\n\n\n\nWrite pseudocode to describe and document modifications made to a data set\n\n\n\n\nAccess documentation and source code to determine how software works (or why it doesn’t)\n\n\n\n\nIdentify problems in a data set that limit the analyses which are appropriate for the data"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#textbook",
    "href": "slides/01-Syllabus-and-Introductions.html#textbook",
    "title": "Introduction",
    "section": "Textbook",
    "text": "Textbook\nhttps://srvanderplas.github.io/stat-computing-r-python/"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-materials",
    "href": "slides/01-Syllabus-and-Introductions.html#course-materials",
    "title": "Introduction",
    "section": "Course Materials",
    "text": "Course Materials\n\n\n\nCanvas\n\nquizzes\nweekly readings\nhomework/exam/project submission\n\n\n\n\nCourse site\n\nslides\nweekly readings\nhomework/exam/project descriptions\n\n\nEverything should be cross-linked properly but email me if there’s an issue."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#class-schedule",
    "href": "slides/01-Syllabus-and-Introductions.html#class-schedule",
    "title": "Introduction",
    "section": "Class Schedule",
    "text": "Class Schedule"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#outline",
    "href": "slides/01-Syllabus-and-Introductions.html#outline",
    "title": "Introduction",
    "section": "Outline",
    "text": "Outline\nSubject to change based on the events of the semester…\n\n\n\n\n\nDate\nTopic\n\n\n\n\nJan 21\nGetting Started\n\n\nJan 23\nVersion Control\n\n\nJan 28\nReview: Functions\n\n\nJan 30\nReview: Functions\n\n\nFeb 4\nReview: Data Structures\n\n\nFeb 6\nReview: Data Structures\n\n\nFeb 11\nData Input\n\n\nFeb 13\nData Input\n\n\nFeb 18\nData Visualization\n\n\nFeb 20\nData Visualization\n\n\nFeb 25\nData Cleaning\n\n\nFeb 27\nData Cleaning\n\n\nMar 4\nExam 1 Questions\n\n\nMar 6\nStrings\n\n\nMar 11\nStrings\n\n\nMar 13\nMidterm Due\n\n\nMar 25\nReshaping Data\n\n\nMar 27\nReshaping Data\n\n\nApr 1\nJoining Data\n\n\nApr 3\nJoining Data\n\n\nApr 8\nDates and Times\n\n\nApr 10\nDates and Times\n\n\nApr 15\nProject Work\n\n\nApr 17\nProject Work\n\n\nApr 22\nLists\n\n\nApr 24\nLists\n\n\nApr 29\nProject Work\n\n\nMay 1\nScreencast Video Due\n\n\nMay 6\nSpatial Data\n\n\nMay 8\nPeer Review of Screencast Due\n\n\nMay 14\nScheduled Final"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#grades",
    "href": "slides/01-Syllabus-and-Introductions.html#grades",
    "title": "Introduction",
    "section": "Grades",
    "text": "Grades\n\n\n\nAssignments\nWeight\n\n\n\n\nReading Quizzes\n10%\n\n\nWeekly Homework & Participation\n50%\n\n\nMidterm Exam\n20%\n\n\nProject\n20%\n\n\n\nApproximately Weekly Homework – started in class"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#academic-integrity-policy",
    "href": "slides/01-Syllabus-and-Introductions.html#academic-integrity-policy",
    "title": "Introduction",
    "section": "Academic Integrity Policy",
    "text": "Academic Integrity Policy\n\nYou may (should!) work with each other on homework assignments\nWork alone on exams\nYou must be able to explain anything you submit\nAt my discretion, I can use a one-on-one discussion of your work to replace the grade for that work.\nChatGPT, StackOverflow, Google are tools, but they do not help you think"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#install-course-software",
    "href": "slides/01-Syllabus-and-Introductions.html#install-course-software",
    "title": "Introduction",
    "section": "Install Course Software",
    "text": "Install Course Software\nTextbook Chapter 2"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#next-time",
    "href": "slides/01-Syllabus-and-Introductions.html#next-time",
    "title": "Introduction",
    "section": "Next Time",
    "text": "Next Time\nWe’ll work on Version Control with Git\n\n\nPlease read before class:\n\nComputer Basics\nScripts and Notebooks\nRStudio’s Interface\nVersion Control with Git\n\n\n\n\n\nOctocat Image Source"
  },
  {
    "objectID": "homework/02-review.html",
    "href": "homework/02-review.html",
    "title": "Homework 2: Reviewing R and Python",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nA palindrome is a string that is equal to the reverse of that string, such as “Mom”, “Hannah” or “We panic in a pew.”\nTraditionally, a phrase is tested for being a palindrome once all spaces and punctuation has been removed, and all letters are written in the same case. You will need to think about how to do these tasks in R and python."
  },
  {
    "objectID": "homework/02-review.html#pseudocode",
    "href": "homework/02-review.html#pseudocode",
    "title": "Homework 2: Reviewing R and Python",
    "section": "Pseudocode",
    "text": "Pseudocode\nWrite a detailed list of steps to process a string named test to test that it is a palindrome.\nYou may find it helpful to write down some test words and work through them as if you were an algorithm. If you do this, please take a picture of your scratch paper, put it in the homework directory, and add it to your git repository along with your assignment solution.\nHint: The final items in this list of steps should be defining a variable revtest that is test with the letters reversed, and then comparing test and revtest for equality."
  },
  {
    "objectID": "homework/02-review.html#r",
    "href": "homework/02-review.html#r",
    "title": "Homework 2: Reviewing R and Python",
    "section": "R",
    "text": "R\nTurn your pseudocode into a sequence of statements in R that work with a variable named test. At this point, there is no need to write these steps in a function - we’ll get there.\n\ntest &lt;- \"Hannah\"\ntest2 &lt;- \"not-a-palindrome\"\n\n# Your steps go here"
  },
  {
    "objectID": "homework/02-review.html#python",
    "href": "homework/02-review.html#python",
    "title": "Homework 2: Reviewing R and Python",
    "section": "Python",
    "text": "Python\nTurn your pseudocode into a sequence of statements in python that work with a variable named test. At this point, there is no need to write these steps in a function - we’ll get there.\n\ntest = \"Hannah\"\ntest2 = \"not-a-palindrome\"\n\n# Your steps go here"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat 251: Data Wrangling",
    "section": "",
    "text": "Course Materials\nDates shown are due dates (for homework and exams) and dates on which material was presented (for slides).\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nType\n\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\ndecodeR: Base R\n\n\nhomework\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nData Input\n\n\nreading\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nExploratory Data Analysis\n\n\nreading\n\n\n\n\n\n\n\nFeb 6, 2025\n\n\nReview - Cipher\n\n\n \n\n\n\n\n\n\n\nFeb 4, 2025\n\n\nHomework 2: Reviewing R and Python\n\n\nhomework\n\n\n\n\n\n\n\nFeb 4, 2025\n\n\nReview - Cipher\n\n\n \n\n\n\n\n\n\n\nJan 30, 2025\n\n\nProgramming Review\n\n\nslides\n\n\n\n\n\n\n\nJan 28, 2025\n\n\n👋 The Basics of GitHub\n\n\nhomework\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nProgramming Review\n\n\nslides\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nVersion Control with Git and Github\n\n\nreading\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nReview - Programming\n\n\nreading\n\n\n\n\n\n\n\nJan 23, 2025\n\n\nVersion Control\n\n\nslides\n\n\n\n\n\n\n\nJan 23, 2025\n\n\nReview - Tools\n\n\nreading\n\n\n\n\n\n\n\nJan 21, 2025\n\n\nIntroduction\n\n\nslides\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "homework/01-git-github.html",
    "href": "homework/01-git-github.html",
    "title": "👋 The Basics of GitHub",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/01-git-github.html#course-overview-and-learning-outcomes",
    "href": "homework/01-git-github.html#course-overview-and-learning-outcomes",
    "title": "👋 The Basics of GitHub",
    "section": "🤓 Course overview and learning outcomes",
    "text": "🤓 Course overview and learning outcomes\nThe goal of this course is to give you a brief introduction to GitHub. We’ll also provide you with materials for further learning and a few ideas to get you started on our platform. 🚀"
  },
  {
    "objectID": "homework/01-git-github.html#git-and-github",
    "href": "homework/01-git-github.html#git-and-github",
    "title": "👋 The Basics of GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\nGit is a distributed Version Control System (VCS), which means it is a useful tool for easily tracking changes to your code, collaborating, and sharing. With Git you can track the changes you make to your project so you always have a record of what you’ve worked on and can easily revert back to an older version if need be. It also makes working with others easier—groups of people can work together on the same project and merge their changes into one final source!\nGitHub is a way to use the same power of Git all online with an easy-to-use interface. It’s used across the software world and beyond to collaborate and maintain the history of projects.\nGitHub is home to some of the most advanced technologies in the world. Whether you’re visualizing data or building a new game, there’s a whole community and set of tools on GitHub that can get you to the next step. This course starts with the basics of GitHub, but we’ll dig into the rest later."
  },
  {
    "objectID": "homework/01-git-github.html#understanding-the-github-flow",
    "href": "homework/01-git-github.html#understanding-the-github-flow",
    "title": "👋 The Basics of GitHub",
    "section": "Understanding the GitHub flow",
    "text": "Understanding the GitHub flow\nThe GitHub flow is a lightweight workflow that allows you to experiment and collaborate on your projects easily, without the risk of losing your previous work.\n\nRepositories\nA repository is where your project work happens–think of it as your project folder. It contains all of your project’s files and revision history. You can work within a repository alone or invite others to collaborate with you on those files.\n\n\nCloning\nWhen a repository is created with GitHub, it’s stored remotely in the ☁️. You can clone a repository to create a local copy on your computer and then use Git to sync the two. This makes it easier to fix issues, add or remove files, and push larger commits. You can also use the editing tool of your choice as opposed to the GitHub UI. Cloning a repository also pulls down all the repository data that GitHub has at that point in time, including all versions of every file and folder for the project! This can be helpful if you experiment with your project and then realize you liked a previous version more. To learn more about cloning, read “Cloning a Repository”.\n\n\nCommitting and pushing\nCommitting and pushing are how you can add the changes you made on your local machine to the remote repository in GitHub. That way your instructor and/or teammates can see your latest work when you’re ready to share it. You can make a commit when you have made changes to your project that you want to “checkpoint.” You can also add a helpful commit message to remind yourself or your teammates what work you did (e.g. “Added a README with information about our project”).\nOnce you have a commit or multiple commits that you’re ready to add to your repository, you can use the push command to add those changes to your remote repository. Committing and pushing may feel new at first, but we promise you’ll get used to it 🙂"
  },
  {
    "objectID": "homework/01-git-github.html#github-terms-to-know",
    "href": "homework/01-git-github.html#github-terms-to-know",
    "title": "👋 The Basics of GitHub",
    "section": "💻 GitHub terms to know",
    "text": "💻 GitHub terms to know\n\nRepositories\nWe mentioned repositories already, they are where your project work happens, but let’s talk a bit more about the details of them! As you work more on GitHub you will have many repositories which may feel confusing at first. Fortunately, your “GitHub dashboard” helps to easily navigate to your repositories and see useful information about them. Make sure you’re logged in to see it!\nRepositories also contain READMEs. You can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it. We are using this README to communicate how to learn Git and GitHub with you. 😄 To learn more about repositories read “Creating, Cloning, and Archiving Repositories and “About README’s”.\n\n\nBranches\nYou can use branches on GitHub to isolate work that you do not want merged into your final project just yet. Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. Typically, you might create a new branch from the default branch of your repository—main. This makes a new working copy of your repository for you to experiment with. Once your new changes have been reviewed by a teammate, or you are satisfied with them, you can merge your changes into the default branch of your repository. To learn more about branching, read “About Branches”.\nNote: In this class, you will not be required to use branches.\n\n\nForks\nA fork is another way to copy a repository, but is usually used when you want to contribute to someone else’s project. Forking a repository allows you to freely experiment with changes without affecting the original project and is very popular when contributing to open source software projects! To learn more about forking, read “Fork a repo”\nNote: In this class, you will not be required to use forks.\n\n\nPull requests\nWhen working with branches, you can use a pull request to tell others about the changes you want to make and ask for their feedback. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add more changes if need be. You can add specific people as reviewers of your pull request which shows you want their feedback on your changes! Once a pull request is ready-to-go, it can be merged into your main branch. To learn more about pull requests, read “About Pull Requests”.\nNote: In this course, you will not be required to use pull requests.\n\n\nIssues\nIssues are a way to track enhancements, tasks, or bugs for your work on GitHub. Issues are a great way to keep track of all the tasks you want to work on for your project and let others know what you plan to work on. You can also use issues to tell a favorite open source project about a bug you found or a feature you think would be great to add!\nFor larger projects, you can keep track of many issues on a project board. GitHub Projects help you organize and prioritize your work and you can read more about them in this “About Project boards document. You likely won’t need a project board for your assignments, but once you move on to even bigger projects, they’re a great way to organize your team’s work! You can also link together pull requests and issues to show that a fix is in progress and to automatically close the issue when someone merges the pull request. To learn more about issues and linking them to your pull requests, read “About Issues”.\n\n\nYour user profile\nYour profile page tells people the story of your work through the repositories you’re interested in, the contributions you’ve made, and the conversations you’ve had. You can also give the world a unique view into who you are with your profile README. You can use your profile to let future employers know all about you! To learn more about your user profile and adding and updating your profile README, read “Managing Your Profile README”.\n\n\nUsing markdown on GitHub\nYou might have noticed already, but you can add some fun styling to your issues, pull requests, and files. “Markdown” is an easy way to style your issues, pull requests, and files with some simple syntax. This can be helpful to organize your information and make it easier for others to read. You can also drop in gifs and images to help convey your point! To learn more about using GitHub’s flavor of markdown, read “Basic Writing and Formatting Syntax”.\n\n\nEngaging with the GitHub community\nThe GitHub community is vast. There are many types of people who use GitHub in their day to day—students like you, professional developers, hobbyists working on open source projects, and explorers who are just jumping into the world of software development on their own. There are many ways you can interact with the larger GitHub community, but here are three places where you can start.\n\nStarring repositories\nIf you find a repository interesting or you want to keep track of it, star it! When you star a repository it’s also used as a signal to surface better recommendations on github.com/explore. If you’d like to get back to your starred repositories you can do so via your user profile. To learn more about starring repositories, read “Saving Repositories with Stars”.\n\n\nFollowing users\nYou can follow people on GitHub to receive notifications about their activity and discover projects in their communities. When you follow a user, their public GitHub activity will show up on your dashboard so you can see all the cool things they are working on. To learn more about following users, read “Following People”.\n\n\nBrowsing GitHub Explore\nGitHub Explore is a great place to do just that … explore :smile: You can find new projects, events, and developers to interact with.\nYou can check out the GitHub Explore website at github.com/explore. The more you intereact with GitHub the more tailored your Explore view will be."
  },
  {
    "objectID": "homework/01-git-github.html#next-steps",
    "href": "homework/01-git-github.html#next-steps",
    "title": "👋 The Basics of GitHub",
    "section": "📝 Next steps",
    "text": "📝 Next steps\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‘About_Me.md’. Provide a short biography/introduction for yourself and use markdown formatting\n\nMarkdown Basics provides an overview of different formatting options in markdown.\nYou must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears.\nTo get full credit for your assignment, you will need to have worked with your git repository locally. I will be able to see if you have used the github editor to make your changes instead :)."
  },
  {
    "objectID": "homework/01-git-github.html#resources",
    "href": "homework/01-git-github.html#resources",
    "title": "👋 The Basics of GitHub",
    "section": "📚 Resources",
    "text": "📚 Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nHow to use GitHub branches\nInteractive Git training materials\nGitHub’s Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "homework/01-git-github.html#optional-extra-steps",
    "href": "homework/01-git-github.html#optional-extra-steps",
    "title": "👋 The Basics of GitHub",
    "section": "Optional extra steps",
    "text": "Optional extra steps\n\nOpen a pull request and let your teacher know that you’ve finished this course.\n\nCreate your profile README. Let the world know a little bit more about you! What are you interested in learning? What are you working on? What’s your favorite hobby? Learn more about creating your profile README in the document, “Managing Your Profile README”.\nGo to your user dashboard and create a new repository. Experiment with the features within that repository to familiarize yourself with them.\nLet us know what you liked or didn’t like about the content of this course. What would you like to see more of? What would be interesting or helpful to your learning journey?"
  },
  {
    "objectID": "homework/03-cipher.html",
    "href": "homework/03-cipher.html",
    "title": "decodeR: Base R",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nThis assignment is modified from the decodeR exercises by Kelly Bodwin and Allison Theobold.\nIn this assignment, you will be creating and manipulating vectors, lists, and data frames to uncover a top secret message.\nSome advice:"
  },
  {
    "objectID": "homework/03-cipher.html#part-one-setup",
    "href": "homework/03-cipher.html#part-one-setup",
    "title": "decodeR: Base R",
    "section": "Part One: Setup",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and/or do the desired task incorrectly. Find the mistake, and correct it to complete the intended action. For each error, write 1-2 sentences to reflect on what the mistake was and how you found it and fixed it.\n\nCreate vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \":\")\n\n\nMake one long vector containing all the symbols.\n\n\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\n\nTurn the my_symbols vector into a data frame, with the variable name “Symbol”\n\n\nmy_symbols &lt;- dataframe(my_symbols)\nnames(my_symbols) = Symbol\n\n\nFind the total number of symbols we have in our data frame.\n\n\nlen &lt;- length(my_symbols)\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.\n\n\nmy_symbols%Num &lt;- 1:len"
  },
  {
    "objectID": "homework/03-cipher.html#part-two-decoding-the-secret-message.",
    "href": "homework/03-cipher.html#part-two-decoding-the-secret-message.",
    "title": "decodeR: Base R",
    "section": "Part Two: Decoding the secret message.",
    "text": "Part Two: Decoding the secret message.\nThis chunk will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read.csv(\"Secret_Code\", header = FALSE)$V1\n\nBy altering this top secret set of numbers, you will be able to create a message. Write your own code to complete the steps below.\n\nAdd 14 to every number.\nMultiply every number by 18, then subtract 257.\nExponentiate every number. (That is, do e^[number].)\nSquare every number.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, there should be 352 numbers in the secret message that are below 17.\n\nTurn your vector of numbers into a matrix with 5 columns.\nSeparately from your top secret numbers, create a vector of all the even numbers between 1 and 382. Name it “evens”. That is, “evens” should contain 2, 4, 6, 8 …, 382.\nSubtract the “evens” vector from the first column of your secret message matrix.\nSubtract 100 from all numbers in the 18-24th rows of the 3rd column.\nMultiply all numbers in the 4th and 5th column by 2.\nTurn your matrix back into a vector.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, all numbers in indices 500 and beyond are below 100.\n\nTake the square root of all numbers in indices 38 to 465.\nRound all numbers to the nearest whole number.\nReplace all instances of the number 39 with 20.\n\nCheckpoint: Headquarters has informed you that your final message should have 344 even numbers."
  },
  {
    "objectID": "homework/03-cipher.html#part-3-the-secret-message",
    "href": "homework/03-cipher.html#part-3-the-secret-message",
    "title": "decodeR: Base R",
    "section": "Part 3: The secret message!",
    "text": "Part 3: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message!\nGoogle the first line of this message, if you do not recognize it, to see what it is.\nWrite 3-4 sentences about what you learned from this investigation. What problems did you encounter, and how did you solve them? Could you do the same tasks in Python? Why or why not?"
  },
  {
    "objectID": "slides/02-version-control.html",
    "href": "slides/02-version-control.html",
    "title": "Version Control",
    "section": "",
    "text": "Version control is the answer to this file naming problem.Image Source “Piled Higher and Deeper” by Jorge Cham www.phdcomics.com\n\n\n\n\nIn a system terminal, run…\n\ngit config --global user.name 'YOUR NAME HERE'\ngit config --global user.email 'YOUR EMAIL HERE'\ngit config --global --list # check to see it worked\n\n\n\n\nInstructions\n\n\n\n\n\n(Demo)\n\n\n\n(Demo)"
  },
  {
    "objectID": "slides/02-version-control.html#introduce-yourself-to-git",
    "href": "slides/02-version-control.html#introduce-yourself-to-git",
    "title": "Version Control",
    "section": "",
    "text": "In a system terminal, run…\n\ngit config --global user.name 'YOUR NAME HERE'\ngit config --global user.email 'YOUR EMAIL HERE'\ngit config --global --list # check to see it worked"
  },
  {
    "objectID": "slides/02-version-control.html#connect-git-and-r",
    "href": "slides/02-version-control.html#connect-git-and-r",
    "title": "Version Control",
    "section": "",
    "text": "Instructions"
  },
  {
    "objectID": "slides/02-version-control.html#navigating-around-github",
    "href": "slides/02-version-control.html#navigating-around-github",
    "title": "Version Control",
    "section": "",
    "text": "(Demo)"
  },
  {
    "objectID": "slides/02-version-control.html#using-rstudio-and-git",
    "href": "slides/02-version-control.html#using-rstudio-and-git",
    "title": "Version Control",
    "section": "",
    "text": "(Demo)"
  },
  {
    "objectID": "slides/02b-review-topics.html#last-class",
    "href": "slides/02b-review-topics.html#last-class",
    "title": "Programming Review",
    "section": "Last Class",
    "text": "Last Class\n\nWorked on Homework #2\nIdentified several useful functions and packages:\n\npackages/libraries\n\nin R: stringr, stringi\nin python: re\n\nfunctions\n\nin R: tolower, stri_reverse, stri_sub_all\nin python: .lower(), [::-1], re.sub\n\n\nIf you made at least one submission to github, you have some points for homework #2 in Canvas"
  }
]