[
  {
    "objectID": "exam/2024-midterm/index.html",
    "href": "exam/2024-midterm/index.html",
    "title": "Practice Exam (2024)",
    "section": "",
    "text": "In this exam, you’ll be using data collected about US polling places. The Center for Public Integrity assembled this data using open records requests and contact with state or county election officials. Full documentation is available on the github repository for the data - each state’s details can be found in a README file for that state; there is also a machine-readable manifest.yaml file for each state provided.\nWe will start out by using data assembled by the TidyTuesday project, but will eventually get to the raw data as well.\nThe raw CSV data is available at https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-16/polling_places.csv\n# load any R packages you use in this chunk\n# load any python packages you use in this chunk"
  },
  {
    "objectID": "exam/2024-midterm/index.html#data-file-inspection",
    "href": "exam/2024-midterm/index.html#data-file-inspection",
    "title": "Practice Exam (2024)",
    "section": "Data File Inspection",
    "text": "Data File Inspection\nHere are the first six lines of the TidyTuesday CSV file:\nelection_date,state,county_name,jurisdiction,jurisdiction_type,precinct_id,precinct_name,polling_place_id,location_type,name,address,notes,source,source_date,source_notes\n2020-11-03,AL,AUTAUGA,AUTAUGA,county,NA,AUTAUGAVILLE VOL FIRE DEPT,NA,election_day,AUTAUGAVILLE VOL FIRE DEPT,\"2610 HIGHWAY 14 W, AUTAUGAVILLE, AL 36003\",NA,ORR,2020-10-21,NA\n2020-11-03,AL,AUTAUGA,AUTAUGA,county,NA,BILLINGSLEY COMMUNITY CENTER,NA,election_day,BILLINGSLEY COMMUNITY CENTER,\"2159 COUNTY RD 37, BILLINGSLEY, AL 36006\",NA,ORR,2020-10-21,NA\n2020-11-03,AL,AUTAUGA,AUTAUGA,county,NA,BOONE'S CHAPEL,NA,election_day,BOONE'S CHAPEL,\"2301 COUNTY RD 66, PRATTVILLE, AL 36067\",NA,ORR,2020-10-21,NA\n2020-11-03,AL,AUTAUGA,AUTAUGA,county,NA,BOOTH VOL FIRE DEPT,NA,election_day,BOOTH VOL FIRE DEPT,\"1701 COUNTY ROAD 10, BOOTH, AL 36008\",NA,ORR,2020-10-21,NA\n2020-11-03,AL,AUTAUGA,AUTAUGA,county,NA,CAMELLIA BAPTIST CH,NA,election_day,CAMELLIA BAPTIST CH,\"201 WOODVALE ROAD, PRATTVILLE, AL 36067\",NA,ORR,2020-10-21,NA\n\nWhat is the file delimiter? (1 pt)\n\nWhat is the header? (1 pt)\n\nHow many columns will the data have when it is read in using R or Python? (1 pt)\n\nHow is the data stored differently in the address field compared to the name field (1 pt), and why is this different handling necessary (1 pt)?"
  },
  {
    "objectID": "exam/2024-midterm/index.html#reading-the-data",
    "href": "exam/2024-midterm/index.html#reading-the-data",
    "title": "Practice Exam (2024)",
    "section": "Reading the Data",
    "text": "Reading the Data\nRead in the data in R (5 pts) and in python (5 pts).\nMake sure to load any packages which are necessary to run your code in the setup chunks at the beginning of the document."
  },
  {
    "objectID": "exam/2024-midterm/index.html#summarize-the-data",
    "href": "exam/2024-midterm/index.html#summarize-the-data",
    "title": "Practice Exam (2024)",
    "section": "Summarize the Data",
    "text": "Summarize the Data\nUsing any method you choose from either language, fill in the following table.\nLanguage used: \nMake sure your terms match the language you’re using and the code you provided above. If you use code to get these values (which is probably a good idea), please use the code chunks provided here:\nWhen computing the number of unique values, exclude missing values.\n\nSummary of Polling Data\n\n\n\n\n\n\n\n\nColumn Name\nData Type (5 pts)\n# missing values (5 pts)\n# unique values (5 pts)\n\n\n\n\nelection_date\n\n\n\n\n\nstate\n\n\n\n\n\ncounty_name\n\n\n\n\n\njurisdiction\n\n\n\n\n\njurisdiction_type\n\n\n\n\n\nprecinct_id\n\n\n\n\n\nprecinct_name\n\n\n\n\n\npolling_place_id\n\n\n\n\n\nlocation_type\n\n\n\n\n\nname\n\n\n\n\n\naddress\n\n\n\n\n\nnotes\n\n\n\n\n\nsource\n\n\n\n\n\nsource_date\n\n\n\n\n\nsource_notes"
  },
  {
    "objectID": "exam/2024-midterm/index.html#steps",
    "href": "exam/2024-midterm/index.html#steps",
    "title": "Practice Exam (2024)",
    "section": "Steps",
    "text": "Steps\n(10 pts)\nWrite out the steps (in plain language) required to get from the polling place data provided here to the data you need to create your plot. Make sure to remove polling places which do not make sense - e.g. those with an address consisting of just the state name, or those named “DO NOT USE”.\nFor each step, identify the data manipulation verb you will use, and any variables you will pass in as arguments. Fill in the following table when you are finished. Add new rows by moving to a new line, and separate each cell in the table with | (spaces matter). | is on the key above the enter key and shares a key with \\ (backslash). You will need to hold shift down.\n\n\n\nStep #\nVerb\nArguments\n\n\n\n\n1\n…\n…"
  },
  {
    "objectID": "exam/2024-midterm/index.html#code",
    "href": "exam/2024-midterm/index.html#code",
    "title": "Practice Exam (2024)",
    "section": "Code",
    "text": "Code\n(10 pts)\nWrite code in R or python to execute the steps you outlined above."
  },
  {
    "objectID": "exam/2024-midterm/index.html#chart-description",
    "href": "exam/2024-midterm/index.html#chart-description",
    "title": "Practice Exam (2024)",
    "section": "Chart Description",
    "text": "Chart Description\n(7 pts)\nUse the grammar of graphics to identify the components of the chart here, which provides the data for Wisconsin. \n\ngeom:\naesthetics: (list at least 3)\n\n\n\n\n\ncoordinate system:\ny axis scale:\nx axis scale:"
  },
  {
    "objectID": "exam/2024-midterm/index.html#chart",
    "href": "exam/2024-midterm/index.html#chart",
    "title": "Practice Exam (2024)",
    "section": "Chart",
    "text": "Chart\n(20 pts)\nWrite code in R or python to create a chart like that shown at the beginning of this example (5 pts). Make sure your axes are labeled (5 pts) and your chart has a title (5 pts). Include your plot in this document and make sure you have a figure caption that describes what someone should notice in the chart (5 pts) You may do this either by modifying the chunk options or by using include=F and manually including the picture with a caption."
  },
  {
    "objectID": "exam/2024-midterm/index.html#modifications",
    "href": "exam/2024-midterm/index.html#modifications",
    "title": "Practice Exam (2024)",
    "section": "Modifications",
    "text": "Modifications\nEvaluate the chart you created for comprehensibility and accessibility. (1 pt)\nWhat modifications might you add to this chart to make it clearer and more understandable? (2 pts)"
  },
  {
    "objectID": "exam/2024-midterm/index.html#function-steps",
    "href": "exam/2024-midterm/index.html#function-steps",
    "title": "Practice Exam (2024)",
    "section": "Function Steps",
    "text": "Function Steps\n(5 pts)\nUse the following addresses to think through the steps you will need to accomplish this task.\nTatitlek, AK 99677\nFirst Street, Cordova, AK 99574\n105 ICE ST, MENASHA, WI 54952-3223\n1025 W 5TH AVE, OSHKOSH, WI 54902\n1702 COUNTY ROAD 40 W, PRATTVILLE, AL 36067\n5281 HIGHWAY 29, CORINTH VFD (PEROTE STATION), BANKS, AL 36005\n713 W. MOUNTAIN AVENUE, JACKSONVILLE, AL 36265\nCOMMUNITY CENTER, 1168 HWY 84, SILAS, AL 36919\nWrite out the steps your function will need to accomplish in plain language."
  },
  {
    "objectID": "exam/2024-midterm/index.html#function-code---single-address",
    "href": "exam/2024-midterm/index.html#function-code---single-address",
    "title": "Practice Exam (2024)",
    "section": "Function Code - Single Address",
    "text": "Function Code - Single Address\n(5 pts)\nWrite a function, address_parser, which can handle a single address and return a data structure containing each piece of the address, with NAs for pieces which are not matched.\n(change this chunk to python if you’d prefer to use python over R for this task)\nThis chunk will test your function on the addresses provided as examples. (change this chunk to python if you used python above)\n\naddress_parser(\"Tatitlek, AK 99677\")\n\nError in address_parser(\"Tatitlek, AK 99677\"): could not find function \"address_parser\"\n\naddress_parser(\"First Street, Cordova, AK 99574\")\n\nError in address_parser(\"First Street, Cordova, AK 99574\"): could not find function \"address_parser\"\n\naddress_parser(\"105 ICE ST, MENASHA, WI 54952-3223\")\n\nError in address_parser(\"105 ICE ST, MENASHA, WI 54952-3223\"): could not find function \"address_parser\"\n\naddress_parser(\"1025 W 5TH AVE, OSHKOSH, WI 54902\")\n\nError in address_parser(\"1025 W 5TH AVE, OSHKOSH, WI 54902\"): could not find function \"address_parser\"\n\naddress_parser(\"1702 COUNTY ROAD 40 W, PRATTVILLE, AL 36067\")\n\nError in address_parser(\"1702 COUNTY ROAD 40 W, PRATTVILLE, AL 36067\"): could not find function \"address_parser\"\n\naddress_parser(\"5281 HIGHWAY 29, CORINTH VFD (PEROTE STATION), BANKS, AL 36005\")\n\nError in address_parser(\"5281 HIGHWAY 29, CORINTH VFD (PEROTE STATION), BANKS, AL 36005\"): could not find function \"address_parser\"\n\naddress_parser(\"713 W. MOUNTAIN AVENUE, JACKSONVILLE, AL 36265\")\n\nError in address_parser(\"713 W. MOUNTAIN AVENUE, JACKSONVILLE, AL 36265\"): could not find function \"address_parser\"\n\naddress_parser(\"COMMUNITY CENTER, 1168 HWY 84, SILAS, AL 36919\")\n\nError in address_parser(\"COMMUNITY CENTER, 1168 HWY 84, SILAS, AL 36919\"): could not find function \"address_parser\""
  },
  {
    "objectID": "exam/2024-midterm/index.html#function-code---vector",
    "href": "exam/2024-midterm/index.html#function-code---vector",
    "title": "Practice Exam (2024)",
    "section": "Function Code - Vector",
    "text": "Function Code - Vector\n(5 pts)\nWrite a function, address_vec, which can parse a vector of addresses and return a data frame with columns corresponding to each piece of the address.\n(change this chunk to python if you’d prefer to use python over R for this task)\nThis chunk will test your function on the addresses provided as examples. Delete whichever chunk corresponds to the language you didn’t use.\n\ntest_vec &lt;- c(\"Tatitlek, AK 99677\", \"First Street, Cordova, AK 99574\", \"105 ICE ST, MENASHA, WI 54952-3223\", \"1025 W 5TH AVE, OSHKOSH, WI 54902\", \"1702 COUNTY ROAD 40 W, PRATTVILLE, AL 36067\", \"5281 HIGHWAY 29, CORINTH VFD (PEROTE STATION), BANKS, AL 36005\", \"713 W. MOUNTAIN AVENUE, JACKSONVILLE, AL 36265\", \"COMMUNITY CENTER, 1168 HWY 84, SILAS, AL 36919\")\naddress_vec(test_vec)\n\nError in address_vec(test_vec): could not find function \"address_vec\"\n\n\n\ntest_vec = [\"Tatitlek, AK 99677\", \"First Street, Cordova, AK 99574\", \"105 ICE ST, MENASHA, WI 54952-3223\", \"1025 W 5TH AVE, OSHKOSH, WI 54902\", \"1702 COUNTY ROAD 40 W, PRATTVILLE, AL 36067\", \"5281 HIGHWAY 29, CORINTH VFD (PEROTE STATION), BANKS, AL 36005\", \"713 W. MOUNTAIN AVENUE, JACKSONVILLE, AL 36265\", \"COMMUNITY CENTER, 1168 HWY 84, SILAS, AL 36919\"]\naddress_vec(test_vec)\n\nNameError: name 'address_vec' is not defined"
  },
  {
    "objectID": "exam/2024-midterm/index.html#function-evaluation",
    "href": "exam/2024-midterm/index.html#function-evaluation",
    "title": "Practice Exam (2024)",
    "section": "Function Evaluation",
    "text": "Function Evaluation\nUse your function to parse a vector of the unique polling place addresses in your state, creating a data table of address components for your letters. (5 pts)\nWhere did your function have issues, if it did? (5 pts)"
  },
  {
    "objectID": "exam/2023-midterm/index.html",
    "href": "exam/2023-midterm/index.html",
    "title": "Practice Exam (2023)",
    "section": "",
    "text": "Your goal on this exam is to demonstrate competency in as many of the objectives of chapters we’ve covered in this class so far as you can."
  },
  {
    "objectID": "exam/2023-midterm/index.html#ground-rules",
    "href": "exam/2023-midterm/index.html#ground-rules",
    "title": "Practice Exam (2023)",
    "section": "Ground Rules",
    "text": "Ground Rules\n\nYou may use the textbook and the internet (but the same rules apply - you must be able to explain your answer!)\nYou may NOT confer with other people or AI entities - including posting on StackOverflow, Reddit, etc.\nYou may ask clarifying questions of Dr. Vanderplas by email/zoom or in person\nYou may use R or Python for any of these tasks, but your code must be reproducible - I must be able to run your quarto file on my machine. I have provided R chunks in the correct locations in this file - change them to Python if you wish.\nFor any plot or table you create, be sure to appropriately caption and label it, providing 1-2 sentences to highlight the main purpose/conclusions you can draw from that plot.\nYou should have at least one code chunk for each ## heading below."
  },
  {
    "objectID": "exam/2023-midterm/index.html#read-in-the-data",
    "href": "exam/2023-midterm/index.html#read-in-the-data",
    "title": "Practice Exam (2023)",
    "section": "Read in the Data",
    "text": "Read in the Data\nWrite code which will:\n\nDownload the raw pocket measurements.csv data to a file in this repository\nRead the data in, ensuring that columns containing numbers are appropriately formatted. You may consider the fabric column as a character string."
  },
  {
    "objectID": "exam/2023-midterm/index.html#conduct-an-exploratory-data-analysis",
    "href": "exam/2023-midterm/index.html#conduct-an-exploratory-data-analysis",
    "title": "Practice Exam (2023)",
    "section": "Conduct an Exploratory Data Analysis",
    "text": "Conduct an Exploratory Data Analysis\nGenerate at least 3 questions about the data set and find answers to those questions using charts, tables, or numerical summaries.\n\nQuestions\n\n\n\n\n\n\n\nQuestion Answers\nYour discussion of this output goes here.\nYour discussion of this output goes here.\nYour discussion of this output goes here"
  },
  {
    "objectID": "exam/2023-midterm/index.html#comparing-sexes-and-styles",
    "href": "exam/2023-midterm/index.html#comparing-sexes-and-styles",
    "title": "Practice Exam (2023)",
    "section": "Comparing Sexes and Styles",
    "text": "Comparing Sexes and Styles\nGenerate one or two plots which best showcase the difference in pocket sizes for different sexes and styles of pants. Use The Pudding’s classification for pants styles, treating straight and boot-cut styles as the same and skinny and slim styles as the same.\nYou may annotate the plot with the output from statistical tests if you wish, but it is sufficient to highlight the visual differences. Your chart(s) must have appropriate titles and axis labels, and must be constructed to take into account the principles of good graphics discussed in the textbook.\nYour discussion of this output goes here.\nReplace this paragraph with 1-2 sentences discussing what choices you made to make the plot you generated above perceptually optimal. Which principles of good graphics did you use?"
  },
  {
    "objectID": "slides/02b-review-topics.html#last-class",
    "href": "slides/02b-review-topics.html#last-class",
    "title": "Programming Review",
    "section": "",
    "text": "Worked on Homework #2\nIdentified several useful functions and packages:\n\npackages/libraries\n\nin R: stringr, stringi\nin python: re\n\nfunctions\n\nin R: tolower, stri_reverse, stri_sub_all\nin python: .lower(), [::-1], re.sub\n\n\nIf you made at least one submission to github, you have some points for homework #2 in Canvas"
  },
  {
    "objectID": "slides/02-version-control.html",
    "href": "slides/02-version-control.html",
    "title": "Version Control",
    "section": "",
    "text": "Version control is the answer to this file naming problem.Image Source “Piled Higher and Deeper” by Jorge Cham www.phdcomics.com\n\n\n\n\nIn a system terminal, run…\n\ngit config --global user.name 'YOUR NAME HERE'\ngit config --global user.email 'YOUR EMAIL HERE'\ngit config --global --list # check to see it worked\n\n\n\n\nInstructions\n\n\n\n\n\n(Demo)\n\n\n\n(Demo)"
  },
  {
    "objectID": "slides/02-version-control.html#introduce-yourself-to-git",
    "href": "slides/02-version-control.html#introduce-yourself-to-git",
    "title": "Version Control",
    "section": "",
    "text": "In a system terminal, run…\n\ngit config --global user.name 'YOUR NAME HERE'\ngit config --global user.email 'YOUR EMAIL HERE'\ngit config --global --list # check to see it worked"
  },
  {
    "objectID": "slides/02-version-control.html#connect-git-and-r",
    "href": "slides/02-version-control.html#connect-git-and-r",
    "title": "Version Control",
    "section": "",
    "text": "Instructions"
  },
  {
    "objectID": "slides/02-version-control.html#navigating-around-github",
    "href": "slides/02-version-control.html#navigating-around-github",
    "title": "Version Control",
    "section": "",
    "text": "(Demo)"
  },
  {
    "objectID": "slides/02-version-control.html#using-rstudio-and-git",
    "href": "slides/02-version-control.html#using-rstudio-and-git",
    "title": "Version Control",
    "section": "",
    "text": "(Demo)"
  },
  {
    "objectID": "homework/06-data-manip.html",
    "href": "homework/06-data-manip.html",
    "title": "Homework 6: Data Manipulation",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\ncp ../homework-repos/06-data-manip/gapminder_data.csv .\nco2_sum &lt;- data.frame() # This is here to be a blank data frame so that the \n                        # lines below work before you've filled your code in.\nThe Gapminder project’s mission is to fight devastating ignorance with a fact-based worldview everyone can understand. To do this, they assemble reliable data about a variety of global variables to help educate the general public.\nI have collected data from Gapminder about several variables:\nUse the data manipulation tools you’ve learned about to answer each of the following questions, which I’ve grouped into several general topics. Some questions may specify a specific language to use; if no language is specified, you may choose whether to use R or python to answer the question."
  },
  {
    "objectID": "homework/06-data-manip.html#read-in-the-data",
    "href": "homework/06-data-manip.html#read-in-the-data",
    "title": "Homework 6: Data Manipulation",
    "section": "Read In the Data",
    "text": "Read In the Data\nRead in the data in R and Python. In both languages, store the table in the variable gapminder."
  },
  {
    "objectID": "homework/06-data-manip.html#data-exploration",
    "href": "homework/06-data-manip.html#data-exploration",
    "title": "Homework 6: Data Manipulation",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nMissingness\nGapminder puts a lot of effort into curating certain variables; other variables are less frequently used (or are harder to assemble from reliable sources).\n\nCO2\nCreate a table of all countries with at least 30 observations CO2. Your table should be called co2_sum and should have columns country and n_obs. Do not print out the table; instead, if you have done everything correctly, when your document is compiled the correct number of countries will be filled in in the sentence below the code chunk.\n\nThere are 0 countries with at least 30 years of CO2 data.\n\n\nEnergy\nAnswer in Python\n\n\nIncome\n\n\nGDP\n\nrm ./gapminder_data.csv"
  },
  {
    "objectID": "homework/04-cookies.html",
    "href": "homework/04-cookies.html",
    "title": "Chocolate Chip Cookies",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/04-cookies.html#reading-in-the-data",
    "href": "homework/04-cookies.html#reading-in-the-data",
    "title": "Chocolate Chip Cookies",
    "section": "Reading In the Data",
    "text": "Reading In the Data\nFirst, read in the CSV data of cookie ingredients. Make sure that your end-result data has appropriate types for each column - these should match the types provided in the documentation in the README.md file."
  },
  {
    "objectID": "homework/04-cookies.html#exploratory-data-analysis",
    "href": "homework/04-cookies.html#exploratory-data-analysis",
    "title": "Chocolate Chip Cookies",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nExploratory data analysis is the process of getting familiar with your dataset. To get started, this blog post provides a nice checklist to get you thinking:\n\n\nWhat question(s) are you trying to solve (or prove wrong)?\nWhat kind of data do you have and how do you treat different types?\nWhat’s missing from the data and how do you deal with it?\nWhere are the outliers and why should you care about them?\nHow can you add, change or remove features to get more out of your data?\n\n\n\nGenerating Questions\nGenerate at least 5 questions you might explore using this database of cookie ingredients.\n\n\n\n\n\n\n\n\n\nSkimming the Data\nOne thing we often want to do during EDA is to examine the quality of the data - are there missing values? What quirks might exist in the dataset?\nThe skimr package in R, and the similar skimpy package in python (which has a much better name, in my opinion), can help provide visual summaries of the data.\nInstall both packages, and read the package documentation (R, Python).\n[Part 1] Use each package and generate summaries of your data that require the use of at least some non-default options in each package’s skim function.\n[Part 2] Write 1-2 sentences about what you can tell from each summary display you generate. Did you discover anything new about the data?\n\n\nGenerating Tables\nAnother useful technique for exploratory data analysis is to generate summary tables. You may want to use the dplyr package in R (group_by or count functions), as well as the groupby and count methods in Pandas. Python example, R example\n[Part 1] Using R and Python, generate a table that shows what proportion of recipes contain each type of ingredient, for the most common 20 ingredients.\n[Part 2] Print out a character string that lists all of the ingredients that do not appear in at least 20 recipes.\n(Delete this note, but you can include data values inline in markdown text by using backticks, at least in R. For instance, here is R’s built in value for pi: 3.1415927. Unfortunately, this doesn’t work in python using the knitr markdown engine, but you can print the list out in python anyways using a code chunk.)\n\n\nVisualization\nUsing whatever plotting system you are comfortable with in R or python, see if you can create a couple of useful exploratory data visualizations which address one of the questions you wrote above - or another question which you’ve come up with as you’ve worked on this assignment.\n[Part 1] Create at least one plot (it doesn’t have to be pretty) that showcases an interesting facet of the data.\n[Part 2] Write 2-3 sentences about what you can learn from that plot and what directions you might want to investigate from here."
  },
  {
    "objectID": "homework/02-review.html",
    "href": "homework/02-review.html",
    "title": "Homework 2: Reviewing R and Python",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nA palindrome is a string that is equal to the reverse of that string, such as “Mom”, “Hannah” or “We panic in a pew.”\nTraditionally, a phrase is tested for being a palindrome once all spaces and punctuation has been removed, and all letters are written in the same case. You will need to think about how to do these tasks in R and python."
  },
  {
    "objectID": "homework/02-review.html#pseudocode",
    "href": "homework/02-review.html#pseudocode",
    "title": "Homework 2: Reviewing R and Python",
    "section": "Pseudocode",
    "text": "Pseudocode\nWrite a detailed list of steps to process a string named test to test that it is a palindrome.\nYou may find it helpful to write down some test words and work through them as if you were an algorithm. If you do this, please take a picture of your scratch paper, put it in the homework directory, and add it to your git repository along with your assignment solution.\nHint: The final items in this list of steps should be defining a variable revtest that is test with the letters reversed, and then comparing test and revtest for equality."
  },
  {
    "objectID": "homework/02-review.html#r",
    "href": "homework/02-review.html#r",
    "title": "Homework 2: Reviewing R and Python",
    "section": "R",
    "text": "R\nTurn your pseudocode into a sequence of statements in R that work with a variable named test. At this point, there is no need to write these steps in a function - we’ll get there.\n\ntest &lt;- \"Hannah\"\ntest2 &lt;- \"not-a-palindrome\"\n\n# Your steps go here"
  },
  {
    "objectID": "homework/02-review.html#python",
    "href": "homework/02-review.html#python",
    "title": "Homework 2: Reviewing R and Python",
    "section": "Python",
    "text": "Python\nTurn your pseudocode into a sequence of statements in python that work with a variable named test. At this point, there is no need to write these steps in a function - we’ll get there.\n\ntest = \"Hannah\"\ntest2 = \"not-a-palindrome\"\n\n# Your steps go here"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat 251: Data Wrangling",
    "section": "",
    "text": "Course Materials\nDates shown are due dates (for homework and exams) and dates on which material was presented (for slides).\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nType\n\n\n\n\n\n\n\n\nMar 6, 2025\n\n\nExam Objectives\n\n\n \n\n\n\n\n\n\n\nMar 4, 2025\n\n\nPractice Exam (2023)\n\n\nexam\n\n\n\n\n\n\n\nMar 4, 2025\n\n\nPractice Exam (2024)\n\n\nexam\n\n\n\n\n\n\n\nMar 3, 2025\n\n\nHomework 6: Data Manipulation\n\n\nhomework\n\n\n\n\n\n\n\nFeb 25, 2025\n\n\nHomework 5: Graphics\n\n\nhomework\n\n\n\n\n\n\n\nFeb 25, 2025\n\n\nData Cleaning\n\n\nreading\n\n\n\n\n\n\n\nFeb 24, 2025\n\n\nSurvey Results and Groundhog Graphics\n\n\n \n\n\n\n\n\n\n\nFeb 20, 2025\n\n\nCreating Good Graphics\n\n\n \n\n\n\n\n\n\n\nFeb 18, 2025\n\n\nChocolate Chip Cookies\n\n\nhomework\n\n\n\n\n\n\n\nFeb 18, 2025\n\n\nFinishing up Cookie Exploration\n\n\n \n\n\n\n\n\n\n\nFeb 18, 2025\n\n\nData Visualization\n\n\nreading\n\n\n\n\n\n\n\nFeb 18, 2025\n\n\nGood Graphics\n\n\nreading\n\n\n\n\n\n\n\nFeb 13, 2025\n\n\nData Explorations\n\n\n \n\n\n\n\n\n\n\nFeb 11, 2025\n\n\ndecodeR: Base R\n\n\nhomework\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nReading In Data\n\n\n \n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nData Input\n\n\nreading\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nExploratory Data Analysis\n\n\nreading\n\n\n\n\n\n\n\nFeb 6, 2025\n\n\nReview - Cipher\n\n\n \n\n\n\n\n\n\n\nFeb 4, 2025\n\n\nHomework 2: Reviewing R and Python\n\n\nhomework\n\n\n\n\n\n\n\nFeb 4, 2025\n\n\nReview - Cipher\n\n\n \n\n\n\n\n\n\n\nJan 30, 2025\n\n\nProgramming Review\n\n\nslides\n\n\n\n\n\n\n\nJan 28, 2025\n\n\n👋 The Basics of GitHub\n\n\nhomework\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nProgramming Review\n\n\nslides\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nVersion Control with Git and Github\n\n\nreading\n\n\n\n\n\n\n\nJan 28, 2025\n\n\nReview - Programming\n\n\nreading\n\n\n\n\n\n\n\nJan 23, 2025\n\n\nVersion Control\n\n\nslides\n\n\n\n\n\n\n\nJan 23, 2025\n\n\nReview - Tools\n\n\nreading\n\n\n\n\n\n\n\nJan 21, 2025\n\n\nIntroduction\n\n\nslides\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "homework/01-git-github.html",
    "href": "homework/01-git-github.html",
    "title": "👋 The Basics of GitHub",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/01-git-github.html#course-overview-and-learning-outcomes",
    "href": "homework/01-git-github.html#course-overview-and-learning-outcomes",
    "title": "👋 The Basics of GitHub",
    "section": "🤓 Course overview and learning outcomes",
    "text": "🤓 Course overview and learning outcomes\nThe goal of this course is to give you a brief introduction to GitHub. We’ll also provide you with materials for further learning and a few ideas to get you started on our platform. 🚀"
  },
  {
    "objectID": "homework/01-git-github.html#git-and-github",
    "href": "homework/01-git-github.html#git-and-github",
    "title": "👋 The Basics of GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\nGit is a distributed Version Control System (VCS), which means it is a useful tool for easily tracking changes to your code, collaborating, and sharing. With Git you can track the changes you make to your project so you always have a record of what you’ve worked on and can easily revert back to an older version if need be. It also makes working with others easier—groups of people can work together on the same project and merge their changes into one final source!\nGitHub is a way to use the same power of Git all online with an easy-to-use interface. It’s used across the software world and beyond to collaborate and maintain the history of projects.\nGitHub is home to some of the most advanced technologies in the world. Whether you’re visualizing data or building a new game, there’s a whole community and set of tools on GitHub that can get you to the next step. This course starts with the basics of GitHub, but we’ll dig into the rest later."
  },
  {
    "objectID": "homework/01-git-github.html#understanding-the-github-flow",
    "href": "homework/01-git-github.html#understanding-the-github-flow",
    "title": "👋 The Basics of GitHub",
    "section": "Understanding the GitHub flow",
    "text": "Understanding the GitHub flow\nThe GitHub flow is a lightweight workflow that allows you to experiment and collaborate on your projects easily, without the risk of losing your previous work.\n\nRepositories\nA repository is where your project work happens–think of it as your project folder. It contains all of your project’s files and revision history. You can work within a repository alone or invite others to collaborate with you on those files.\n\n\nCloning\nWhen a repository is created with GitHub, it’s stored remotely in the ☁️. You can clone a repository to create a local copy on your computer and then use Git to sync the two. This makes it easier to fix issues, add or remove files, and push larger commits. You can also use the editing tool of your choice as opposed to the GitHub UI. Cloning a repository also pulls down all the repository data that GitHub has at that point in time, including all versions of every file and folder for the project! This can be helpful if you experiment with your project and then realize you liked a previous version more. To learn more about cloning, read “Cloning a Repository”.\n\n\nCommitting and pushing\nCommitting and pushing are how you can add the changes you made on your local machine to the remote repository in GitHub. That way your instructor and/or teammates can see your latest work when you’re ready to share it. You can make a commit when you have made changes to your project that you want to “checkpoint.” You can also add a helpful commit message to remind yourself or your teammates what work you did (e.g. “Added a README with information about our project”).\nOnce you have a commit or multiple commits that you’re ready to add to your repository, you can use the push command to add those changes to your remote repository. Committing and pushing may feel new at first, but we promise you’ll get used to it 🙂"
  },
  {
    "objectID": "homework/01-git-github.html#github-terms-to-know",
    "href": "homework/01-git-github.html#github-terms-to-know",
    "title": "👋 The Basics of GitHub",
    "section": "💻 GitHub terms to know",
    "text": "💻 GitHub terms to know\n\nRepositories\nWe mentioned repositories already, they are where your project work happens, but let’s talk a bit more about the details of them! As you work more on GitHub you will have many repositories which may feel confusing at first. Fortunately, your “GitHub dashboard” helps to easily navigate to your repositories and see useful information about them. Make sure you’re logged in to see it!\nRepositories also contain READMEs. You can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it. We are using this README to communicate how to learn Git and GitHub with you. 😄 To learn more about repositories read “Creating, Cloning, and Archiving Repositories and “About README’s”.\n\n\nBranches\nYou can use branches on GitHub to isolate work that you do not want merged into your final project just yet. Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. Typically, you might create a new branch from the default branch of your repository—main. This makes a new working copy of your repository for you to experiment with. Once your new changes have been reviewed by a teammate, or you are satisfied with them, you can merge your changes into the default branch of your repository. To learn more about branching, read “About Branches”.\nNote: In this class, you will not be required to use branches.\n\n\nForks\nA fork is another way to copy a repository, but is usually used when you want to contribute to someone else’s project. Forking a repository allows you to freely experiment with changes without affecting the original project and is very popular when contributing to open source software projects! To learn more about forking, read “Fork a repo”\nNote: In this class, you will not be required to use forks.\n\n\nPull requests\nWhen working with branches, you can use a pull request to tell others about the changes you want to make and ask for their feedback. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add more changes if need be. You can add specific people as reviewers of your pull request which shows you want their feedback on your changes! Once a pull request is ready-to-go, it can be merged into your main branch. To learn more about pull requests, read “About Pull Requests”.\nNote: In this course, you will not be required to use pull requests.\n\n\nIssues\nIssues are a way to track enhancements, tasks, or bugs for your work on GitHub. Issues are a great way to keep track of all the tasks you want to work on for your project and let others know what you plan to work on. You can also use issues to tell a favorite open source project about a bug you found or a feature you think would be great to add!\nFor larger projects, you can keep track of many issues on a project board. GitHub Projects help you organize and prioritize your work and you can read more about them in this “About Project boards document. You likely won’t need a project board for your assignments, but once you move on to even bigger projects, they’re a great way to organize your team’s work! You can also link together pull requests and issues to show that a fix is in progress and to automatically close the issue when someone merges the pull request. To learn more about issues and linking them to your pull requests, read “About Issues”.\n\n\nYour user profile\nYour profile page tells people the story of your work through the repositories you’re interested in, the contributions you’ve made, and the conversations you’ve had. You can also give the world a unique view into who you are with your profile README. You can use your profile to let future employers know all about you! To learn more about your user profile and adding and updating your profile README, read “Managing Your Profile README”.\n\n\nUsing markdown on GitHub\nYou might have noticed already, but you can add some fun styling to your issues, pull requests, and files. “Markdown” is an easy way to style your issues, pull requests, and files with some simple syntax. This can be helpful to organize your information and make it easier for others to read. You can also drop in gifs and images to help convey your point! To learn more about using GitHub’s flavor of markdown, read “Basic Writing and Formatting Syntax”.\n\n\nEngaging with the GitHub community\nThe GitHub community is vast. There are many types of people who use GitHub in their day to day—students like you, professional developers, hobbyists working on open source projects, and explorers who are just jumping into the world of software development on their own. There are many ways you can interact with the larger GitHub community, but here are three places where you can start.\n\nStarring repositories\nIf you find a repository interesting or you want to keep track of it, star it! When you star a repository it’s also used as a signal to surface better recommendations on github.com/explore. If you’d like to get back to your starred repositories you can do so via your user profile. To learn more about starring repositories, read “Saving Repositories with Stars”.\n\n\nFollowing users\nYou can follow people on GitHub to receive notifications about their activity and discover projects in their communities. When you follow a user, their public GitHub activity will show up on your dashboard so you can see all the cool things they are working on. To learn more about following users, read “Following People”.\n\n\nBrowsing GitHub Explore\nGitHub Explore is a great place to do just that … explore :smile: You can find new projects, events, and developers to interact with.\nYou can check out the GitHub Explore website at github.com/explore. The more you intereact with GitHub the more tailored your Explore view will be."
  },
  {
    "objectID": "homework/01-git-github.html#next-steps",
    "href": "homework/01-git-github.html#next-steps",
    "title": "👋 The Basics of GitHub",
    "section": "📝 Next steps",
    "text": "📝 Next steps\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‘About_Me.md’. Provide a short biography/introduction for yourself and use markdown formatting\n\nMarkdown Basics provides an overview of different formatting options in markdown.\nYou must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears.\nTo get full credit for your assignment, you will need to have worked with your git repository locally. I will be able to see if you have used the github editor to make your changes instead :)."
  },
  {
    "objectID": "homework/01-git-github.html#resources",
    "href": "homework/01-git-github.html#resources",
    "title": "👋 The Basics of GitHub",
    "section": "📚 Resources",
    "text": "📚 Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nHow to use GitHub branches\nInteractive Git training materials\nGitHub’s Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "homework/01-git-github.html#optional-extra-steps",
    "href": "homework/01-git-github.html#optional-extra-steps",
    "title": "👋 The Basics of GitHub",
    "section": "Optional extra steps",
    "text": "Optional extra steps\n\nOpen a pull request and let your teacher know that you’ve finished this course.\n\nCreate your profile README. Let the world know a little bit more about you! What are you interested in learning? What are you working on? What’s your favorite hobby? Learn more about creating your profile README in the document, “Managing Your Profile README”.\nGo to your user dashboard and create a new repository. Experiment with the features within that repository to familiarize yourself with them.\nLet us know what you liked or didn’t like about the content of this course. What would you like to see more of? What would be interesting or helpful to your learning journey?"
  },
  {
    "objectID": "homework/03-cipher.html",
    "href": "homework/03-cipher.html",
    "title": "decodeR: Base R",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nThis assignment is modified from the decodeR exercises by Kelly Bodwin and Allison Theobold.\nIn this assignment, you will be creating and manipulating vectors, lists, and data frames to uncover a top secret message.\nSome advice:"
  },
  {
    "objectID": "homework/03-cipher.html#part-one-setup",
    "href": "homework/03-cipher.html#part-one-setup",
    "title": "decodeR: Base R",
    "section": "Part One: Setup",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and/or do the desired task incorrectly. Find the mistake, and correct it to complete the intended action. For each error, write 1-2 sentences to reflect on what the mistake was and how you found it and fixed it.\n\nCreate vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \":\")\n\n\nMake one long vector containing all the symbols.\n\n\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\n\nTurn the my_symbols vector into a data frame, with the variable name “Symbol”\n\n\nmy_symbols &lt;- dataframe(my_symbols)\nnames(my_symbols) = Symbol\n\n\nFind the total number of symbols we have in our data frame.\n\n\nlen &lt;- length(my_symbols)\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.\n\n\nmy_symbols%Num &lt;- 1:len"
  },
  {
    "objectID": "homework/03-cipher.html#part-two-decoding-the-secret-message.",
    "href": "homework/03-cipher.html#part-two-decoding-the-secret-message.",
    "title": "decodeR: Base R",
    "section": "Part Two: Decoding the secret message.",
    "text": "Part Two: Decoding the secret message.\nThis chunk will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read.csv(\"Secret_Code\", header = FALSE)$V1\n\nBy altering this top secret set of numbers, you will be able to create a message. Write your own code to complete the steps below.\n\nAdd 14 to every number.\nMultiply every number by 18, then subtract 257.\nExponentiate every number. (That is, do e^[number].)\nSquare every number.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, there should be 352 numbers in the secret message that are below 17.\n\nTurn your vector of numbers into a matrix with 5 columns.\nSeparately from your top secret numbers, create a vector of all the even numbers between 1 and 382. Name it “evens”. That is, “evens” should contain 2, 4, 6, 8 …, 382.\nSubtract the “evens” vector from the first column of your secret message matrix.\nSubtract 100 from all numbers in the 18-24th rows of the 3rd column.\nMultiply all numbers in the 4th and 5th column by 2.\nTurn your matrix back into a vector.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, all numbers in indices 500 and beyond are below 100.\n\nTake the square root of all numbers in indices 38 to 465.\nRound all numbers to the nearest whole number.\nReplace all instances of the number 39 with 20.\n\nCheckpoint: Headquarters has informed you that your final message should have 344 even numbers."
  },
  {
    "objectID": "homework/03-cipher.html#part-3-the-secret-message",
    "href": "homework/03-cipher.html#part-3-the-secret-message",
    "title": "decodeR: Base R",
    "section": "Part 3: The secret message!",
    "text": "Part 3: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message!\nGoogle the first line of this message, if you do not recognize it, to see what it is.\nWrite 3-4 sentences about what you learned from this investigation. What problems did you encounter, and how did you solve them? Could you do the same tasks in Python? Why or why not?"
  },
  {
    "objectID": "homework/05-graphics-groundhogs.html",
    "href": "homework/05-graphics-groundhogs.html",
    "title": "Homework 5: Graphics",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/05-graphics-groundhogs.html#data-exploration",
    "href": "homework/05-graphics-groundhogs.html#data-exploration",
    "title": "Homework 5: Graphics",
    "section": "Data Exploration",
    "text": "Data Exploration\nOne extremely important use of charts is to explore new datasets. In order to get the most out of a dataset, however, it is important to use a chart that is suited to the type of data: a density plot will not work well for showing categorical data, for instance.\nFor each variable in the groundhogs data that contains useful information, find an appropriate plot for the data. You may show more than one variable in a single plot (latitude and longitude should probably be shown together). You may use either R or python for this task.\ngroundhogs.csv\n\nlat, long\ncountry\nisGroundhog\nactive\npredictionsCount\n\npredictions.csv\n\nisGroundhog\nyear\nshadow\n\nFor each plot you draw, write 1-2 sentences explaining what you can learn from the plot.\n\nThis plot shows…"
  },
  {
    "objectID": "homework/05-graphics-groundhogs.html#grammar-of-graphics",
    "href": "homework/05-graphics-groundhogs.html#grammar-of-graphics",
    "title": "Homework 5: Graphics",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nThink of a good way to answer the following questions with a plot. For each plot, write 1-2 sentences explaining why you mapped each variable in the way that you did. Use ggplot2 for this portion of the assignment.\nYou may make editorial decisions here - it may be useful to only show groundhogs with 20 years of predictions, for instance. If you make such decisions, please explain why.\nYour charts must have appropriate axis labels and titles.\n\nDo different groundhogs have different probabilities of predicting 6 more weeks of winter?\n\nI mapped … to x and … to y because…\n\n\nHow much do North American groundhogs tend to agree on their predictions?\nDoes there appear to be any spatial covariance (that is, are groundhogs who are close together more likely to predict the same thing?)\n\nI mapped … to x and … to y because…"
  },
  {
    "objectID": "homework/05-graphics-groundhogs.html#ugly-chart-challenge",
    "href": "homework/05-graphics-groundhogs.html#ugly-chart-challenge",
    "title": "Homework 5: Graphics",
    "section": "Ugly Chart Challenge",
    "text": "Ugly Chart Challenge\nThe textbook spent lots of time showing you how to create different types of graphics, but I spent a lot less time showing you all of the different ways you could customize graphics in any plotting library. In this problem, I want you to create the ugliest graph you can, and then explain why, exactly, you made the decisions you did, and which principles of good graphics you’ve intentionally violated.\nUgliness is subjective, so the goal here is for you to explore the different ways you can customize the finer details of a plot. Make sure your finished masterpiece has appropriate axis labels and a title (after all, even ugly plots need to be correctly labeled!). You are free to add additional variables and layers, modify the aesthetics used, and leverage other packages. If you need inspiration, look here.\nUse the groundhog data to create the ugliest chart you possibly can, by violating as many guidelines for the creation of good graphics as possible.\nDo this for one plotting system in R, and one plotting system in Python. You might try different ways to make things ugly in each plotting system. Note that this dataset does include images of each groundhog, so feel free to leverage that in your plot, if you are so inspired.\nFor each plot, explain why the plot is ugly and what principles of good graphics it violates in 2-3 sentences.\n\nR\nThis chart is ugly because it violates …\n\n\nPython\nThis chart is ugly because it violates …"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#introduce-yourself",
    "href": "slides/01-Syllabus-and-Introductions.html#introduce-yourself",
    "title": "Introduction",
    "section": "",
    "text": "Name / Year / Major\nWhat do you hope to learn in this class?\nPrevious computing experience?\nIs a poptart a ravioli? Why or why not?"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#my-introduction",
    "href": "slides/01-Syllabus-and-Introductions.html#my-introduction",
    "title": "Introduction",
    "section": "",
    "text": "Heike Hofmann\nProfessor in Statistics\nAt UNL since August, I was at ISU for 20 years\nfirst computer language was Pascal :)\nR user since 1996, Python user (? I have learned it four times by now)"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#on-poptarts-and-ravioli",
    "href": "slides/01-Syllabus-and-Introductions.html#on-poptarts-and-ravioli",
    "title": "Introduction",
    "section": "",
    "text": "The Cube Rule of Food, from Reddit\n\n\nThus, a PopTart is a calzone."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#contact-info",
    "href": "slides/01-Syllabus-and-Introductions.html#contact-info",
    "title": "Introduction",
    "section": "Contact Info",
    "text": "Contact Info\n\nEmail: hhofmann4@unl.edu\nOffice: 346D Hardin Hall North Wing\nOffice Hours: TBD"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-objectives",
    "href": "slides/01-Syllabus-and-Introductions.html#course-objectives",
    "title": "Introduction",
    "section": "Course Objectives",
    "text": "Course Objectives\n\n\nUse appropriate visualizations to explore and assess data and its applicability to a problem\n\n\n\n\nWrite code to reshape and reformat moderately complex and/or messy data in a reproducible manner\n\n\n\n\nCreate graphical displays to explore data, assess statistical models, and present model results\n\n\n\n\nAdapt pre-existing code for sophisticated visualizations to new data."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-objectives-1",
    "href": "slides/01-Syllabus-and-Introductions.html#course-objectives-1",
    "title": "Introduction",
    "section": "Course Objectives",
    "text": "Course Objectives\n\n\nImplement an algorithm or procedure for data modification given in pseudocode\n\n\n\n\nWrite pseudocode to describe and document modifications made to a data set\n\n\n\n\nAccess documentation and source code to determine how software works (or why it doesn’t)\n\n\n\n\nIdentify problems in a data set that limit the analyses which are appropriate for the data"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#textbook",
    "href": "slides/01-Syllabus-and-Introductions.html#textbook",
    "title": "Introduction",
    "section": "Textbook",
    "text": "Textbook\nhttps://srvanderplas.github.io/stat-computing-r-python/"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#course-materials",
    "href": "slides/01-Syllabus-and-Introductions.html#course-materials",
    "title": "Introduction",
    "section": "Course Materials",
    "text": "Course Materials\n\n\n\nCanvas\n\nquizzes\nweekly readings\nhomework/exam/project submission\n\n\n\n\nCourse site\n\nslides\nweekly readings\nhomework/exam/project descriptions\n\n\nEverything should be cross-linked properly but email me if there’s an issue."
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#class-schedule",
    "href": "slides/01-Syllabus-and-Introductions.html#class-schedule",
    "title": "Introduction",
    "section": "Class Schedule",
    "text": "Class Schedule"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#outline",
    "href": "slides/01-Syllabus-and-Introductions.html#outline",
    "title": "Introduction",
    "section": "Outline",
    "text": "Outline\nSubject to change based on the events of the semester…\n\n\n\n\n\nDate\nTopic\n\n\n\n\nJan 21\nGetting Started\n\n\nJan 23\nVersion Control\n\n\nJan 28\nReview: Functions\n\n\nJan 30\nReview: Functions\n\n\nFeb 4\nReview: Data Structures\n\n\nFeb 6\nReview: Data Structures\n\n\nFeb 11\nData Input\n\n\nFeb 13\nData Input\n\n\nFeb 18\nData Visualization\n\n\nFeb 20\nData Visualization\n\n\nFeb 25\nData Cleaning\n\n\nFeb 27\nData Cleaning\n\n\nMar 4\nExam 1 Questions\n\n\nMar 6\nStrings\n\n\nMar 11\nStrings\n\n\nMar 13\nMidterm Due\n\n\nMar 25\nReshaping Data\n\n\nMar 27\nReshaping Data\n\n\nApr 1\nJoining Data\n\n\nApr 3\nJoining Data\n\n\nApr 8\nDates and Times\n\n\nApr 10\nDates and Times\n\n\nApr 15\nProject Work\n\n\nApr 17\nProject Work\n\n\nApr 22\nLists\n\n\nApr 24\nLists\n\n\nApr 29\nProject Work\n\n\nMay 1\nScreencast Video Due\n\n\nMay 6\nSpatial Data\n\n\nMay 8\nPeer Review of Screencast Due\n\n\nMay 14\nScheduled Final"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#grades",
    "href": "slides/01-Syllabus-and-Introductions.html#grades",
    "title": "Introduction",
    "section": "Grades",
    "text": "Grades\n\n\n\nAssignments\nWeight\n\n\n\n\nReading Quizzes\n10%\n\n\nWeekly Homework & Participation\n50%\n\n\nMidterm Exam\n20%\n\n\nProject\n20%\n\n\n\nApproximately Weekly Homework – started in class"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#academic-integrity-policy",
    "href": "slides/01-Syllabus-and-Introductions.html#academic-integrity-policy",
    "title": "Introduction",
    "section": "Academic Integrity Policy",
    "text": "Academic Integrity Policy\n\nYou may (should!) work with each other on homework assignments\nWork alone on exams\nYou must be able to explain anything you submit\nAt my discretion, I can use a one-on-one discussion of your work to replace the grade for that work.\nChatGPT, StackOverflow, Google are tools, but they do not help you think"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#install-course-software",
    "href": "slides/01-Syllabus-and-Introductions.html#install-course-software",
    "title": "Introduction",
    "section": "Install Course Software",
    "text": "Install Course Software\nTextbook Chapter 2"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html#next-time",
    "href": "slides/01-Syllabus-and-Introductions.html#next-time",
    "title": "Introduction",
    "section": "Next Time",
    "text": "Next Time\nWe’ll work on Version Control with Git\n\n\nPlease read before class:\n\nComputer Basics\nScripts and Notebooks\nRStudio’s Interface\nVersion Control with Git\n\n\n\n\n\nOctocat Image Source"
  },
  {
    "objectID": "slides/02a-review-topics.html#working-environment",
    "href": "slides/02a-review-topics.html#working-environment",
    "title": "Programming Review",
    "section": "",
    "text": "Know the 3 different ways to execute code from within RStudio\n\nTerminal (Command Line)\nSource Script (RStudio Button)\nInteractive Mode (line by line)\n\nDifferentiate between the Console and the Terminal\nDifferentiate between R and Python in the Console"
  },
  {
    "objectID": "slides/02a-review-topics.html#rstudio-projects",
    "href": "slides/02a-review-topics.html#rstudio-projects",
    "title": "Programming Review",
    "section": "RStudio Projects",
    "text": "RStudio Projects\nRStudio projects are a way to keep your work organized.\nLet’s create one for this week’s class work.\n\n\n\nCreating an RStudio Project"
  },
  {
    "objectID": "slides/02a-review-topics.html#general-programming",
    "href": "slides/02a-review-topics.html#general-programming",
    "title": "Programming Review",
    "section": "General Programming",
    "text": "General Programming\nReview: General Programming\nKnow how to:\n\nDefine a variable\nWrite a function\nWrite an if/else statement\nload a package or import a library\nCreate a data table structure\nGet a column, row, or value from a data table\nGet an item from a list"
  },
  {
    "objectID": "slides/02a-review-topics.html#self-assessment",
    "href": "slides/02a-review-topics.html#self-assessment",
    "title": "Programming Review",
    "section": "Self-assessment",
    "text": "Self-assessment\nIt’s sometimes hard to know what you know and what you don’t know\nSelf-assessment in Canvas: due by Feb 6"
  },
  {
    "objectID": "slides/02a-review-topics.html#homework-2",
    "href": "slides/02a-review-topics.html#homework-2",
    "title": "Programming Review",
    "section": "Homework 2",
    "text": "Homework 2\n\nFocus on the logic and thinking through the steps\nWork with pencil and paper first"
  },
  {
    "objectID": "exam/2023-midterm/objectives.html",
    "href": "exam/2023-midterm/objectives.html",
    "title": "Exam Objectives",
    "section": "",
    "text": "Note: This list omits objectives from the “review” section, but they are still relevant.\n\nRead in data from common formats into R or Python\nIdentify delimiters, headers, and other essential components of files\nCreate charts designed to communicate specific aspects of the data\nDescribe charts using the grammar of graphics\nCreate layered graphics that highlight multiple aspects of the data\nEvaluate existing charts and develop new versions that improve accessibility and readability\nIdentify required sequence of steps for data cleaning\nDescribe step-by-step data cleaning process in lay terms appropriately\nApply data manipulation verbs to prepare data for analysis\nUnderstand the consequences of data cleaning steps for statistical analysis\nCreate summaries of data appropriate for analysis or display using data manipulation techniques\n\nYou have also been introduced to the objectives of Exploratory Data Analysis:\n\nUnderstand the main goals of exploratory data analysis\nGenerate and answer questions about a new data set using charts, tables, and numerical summaries"
  },
  {
    "objectID": "slides/05b-graphics.html",
    "href": "slides/05b-graphics.html",
    "title": "Creating Good Graphics",
    "section": "",
    "text": "Homework 4\nFeedback posted on any solutions submitted before 5pm yesterday\nBefore the due-date you can re-submit as often as you want to.\nAfter the due-date you have one (re-)submission.\nGet started early on the homework!\n\n\nGraphics week!\nReadings for Tuesday:\n\nGraphics\n\nFocus on relationships between variables\nGrammar of Graphics vs. Manual plot specification/mapping\n\nGood Graphics\n\nPerception & Cognition\nUse the least complicated chart that still works\n\n\n\n\nMake Graphics!\n\nPart I: Make visual summaries for two new data sets and think about mappings\nPart II: Use your knowledge to create the worst!\n\n\n\nResources for this week\n\nR and Python Graph Galleries\nUgly Chart Challenge variant example from last semester’s graduate class\nCustomizing ggplot2 plots\n\nAlso an RStudio addin package - ggThemeAssist\n\nCustomizing seaborn plots\n\n\n\nHomework\n\n\nExplanations! What can you see from the plot? What is its purpose?\n\n\n\n\n\nHomework rubric\n\n\n\nNext time\n\nContinue working on homework assignment\nBrainstorming: 🧠⛈️\n\nhow to make the textbook 📖 more effective\nwhat will motivate you to read it before class? 😜"
  },
  {
    "objectID": "slides/04b-eda.html",
    "href": "slides/04b-eda.html",
    "title": "Data Explorations",
    "section": "",
    "text": "Exploratory Data Analysis\n\nFor observed data (rather than a study), a (descriptive) data exploration is often the only thing we can do\nBut with any new data set, you should do some initial exploration: what are the assumptions (what have you been told about the data?) - are implied expectations holding up?\nMake sure to read through the EDA chapter\n\n\n\nIn-class exercise\nDuring an unusual episode, a number of people were exposed and some died. You are asked to determine the nature of the unusual episode by asking data-motivated yes/no questions\nYou will see two tables:\n\ndeaths by economic status and sex\ndeaths by economic status and age\n\n\n\nWhat would you expect?\nBefore seeing the data\n\nwhat are your expectations regarding exposure by economic status, by sex, and by age?\nwhat are your expectations regarding death numbers/rates by economic status, by sex, and by age?\n\nNow we look at the data: What anomalies do you notice?\n\n\nDeaths by Economic Status and Sex\nBy Economic Status and Sex\n---------------------------------------------------------------------------\n           Population Exposed         Number of            Deaths per 100\n                to Risk                 Deaths            Exposed to Risk\nEconomic   ----------------------------------------------------------------\nStatus     Male  Female  Both     Male  Female  Both     Male  Female  Both\n---------------------------------------------------------------------------\nI          180     145    325     118      4     122      65      3     37\nII         179     106    285     154     13     167      87     12     59\nIII        510     196    706     422    106     528      83     54     73\nIV         862      23    885     670      3     673      78     13     76\n---------------------------------------------------------------------------\nTotal      1731    470   2201     1364    126   1490      80     27     67\n\n\nDeaths by Economic Status and Age\n                       By Economic Status and Age\n---------------------------------------------------------------------------\n           Population Exposed         Number of            Deaths per 100\n                to Risk                 Deaths            Exposed to Risk\nEconomic  -----------------------------------------------------------------\nStatus    Adult   Child  Both    Adult   Child  Both    Adult   Child  Both\n---------------------------------------------------------------------------\nI          319      6     325     122      0     122      38      0     37\nII         261     24     285     167      0     167      64      0     59\nIII        627     79     706     476     52     528      76     66     73\nIV         885      0     885     673      0     673      76      -     76\n---------------------------------------------------------------------------\nTotal      2092    109   2201     1438    52    1490      69     48     67\n\n\nHomework - Reading Data with Cookies\n\nWork on homework #4: what are your expectations regarding the data?\nOne way of asking questions, is to re-phrase an expectation in form of ‘(how) does the data deviate from …?’\nGenerally, when the data does not meet expectations, we find weird stuff …"
  },
  {
    "objectID": "slides/03b-review-cipher.html",
    "href": "slides/03b-review-cipher.html",
    "title": "Review - Cipher",
    "section": "",
    "text": "Homework 2\n\ngraded with feedback\nyou can re-submit (once) to react to the feedback (submit the link in Canvas again, so that I know you are ready for another round of grading)\nextra credit: timing of palindrome evaluation\n\n\n\nSpeed test: R vs python\nFive runs of 10,000 evaluations of checking vector for palindromes:\n\n\n  run replications R [in s] python [in s]\n1   1        10000    0.514     0.1686378\n2   2        10000    0.516     0.1630241\n3   3        10000    0.513     0.1622581\n4   4        10000    0.515     0.1622709\n5   5        10000    0.516     0.1628715\n\n\nWhat information do we gain from the multiple runs?\nWhat do you expect to happen for lower number of replicates (besides faster times)?\n\n\nNumber of replications\n\n\n\n\n\n\n\n\n\n\n\nOther factors: machine load\n\n\n\n\n\n\n\n\n\n\n\nDue dates coming up\n\nReadings: Data input - quiz before class on Tuesday\nHomework #3 due on Tuesday\n\n\n\nTopics to Know\nReview: General Programming\nKnow how to:\n\nCreate a data table structure\nGet a column, row, or value from a data table\nGet an item from a list\n\n\n\n\nHomework - Cipher\n\nGoal for today: push at least one commit to your Github repo\nNot all statements that execute are correct (Part 1: fix mistakes)\nPart 2: write a decoder\nPart 3: Decode the secret message!\n\n\n\n\nVector to matrices\ndefault in R is to fill columns first\n\nx &lt;- 1:9\nmatrix(x, ncol=3)\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\n\nVector to matrices\nin python rows are filled first - need to set order to False\n\nimport numpy as np\nx = np.arange(1, 10)\nmatrix_x = x.reshape(-1, 3, order='F')\n\nprint(matrix_x)\n\n[[1 4 7]\n [2 5 8]\n [3 6 9]]\n\n\n\n\nExtra Credit\nWrite an encoder for your decoder, then use it to create another secret message.\nAdd the R/python code for your encoder in a code chunk in index.qmd.\nAdd your encoded secret message as a file to your repo.\n\n\nNext Time\n\nStart on new unit - reading data!\nBefore class:\nRead Data Input and Exploratory Data Analysis"
  },
  {
    "objectID": "slides/02b-review-topics.html",
    "href": "slides/02b-review-topics.html",
    "title": "Programming Review",
    "section": "",
    "text": "Worked on Homework #2\nIdentified several useful functions and packages:\n\npackages/libraries\n\nin R: stringr, stringi\nin python: re\n\nfunctions\n\nin R: tolower, stri_reverse, stri_sub_all\nin python: .lower(), [::-1], re.sub\n\n\nIf you made at least one submission to github, you have some points for homework #2 in Canvas"
  },
  {
    "objectID": "slides/01-Syllabus-and-Introductions.html",
    "href": "slides/01-Syllabus-and-Introductions.html",
    "title": "Introduction",
    "section": "",
    "text": "Name / Year / Major\nWhat do you hope to learn in this class?\nPrevious computing experience?\nIs a poptart a ravioli? Why or why not?\n\n\n\n\n\nHeike Hofmann\nProfessor in Statistics\nAt UNL since August, I was at ISU for 20 years\nfirst computer language was Pascal :)\nR user since 1996, Python user (? I have learned it four times by now)\n\n\n\n\n\n\n\nThe Cube Rule of Food, from Reddit\n\n\nThus, a PopTart is a calzone."
  },
  {
    "objectID": "slides/02a-review-topics.html",
    "href": "slides/02a-review-topics.html",
    "title": "Programming Review",
    "section": "",
    "text": "Know the 3 different ways to execute code from within RStudio\n\nTerminal (Command Line)\nSource Script (RStudio Button)\nInteractive Mode (line by line)\n\nDifferentiate between the Console and the Terminal\nDifferentiate between R and Python in the Console"
  },
  {
    "objectID": "slides/03a-review-cipher.html",
    "href": "slides/03a-review-cipher.html",
    "title": "Review - Cipher",
    "section": "",
    "text": "Topics to Know\nReview: General Programming\nKnow how to:\n\nDefine a variable\nWrite a function\nWrite an if/else statement\nload a package or import a library\nCreate a data table structure\nGet a column, row, or value from a data table\nGet an item from a list\n\n\n\n\nVectors in R\n\nx &lt;- c(11, 25, 18, 4, 1, 5, 17, 22, 3,  9)\n\nstr(x)\n\n num [1:10] 11 25 18 4 1 5 17 22 3 9\n\nlength(x)\n\n[1] 10\n\n\nQuick-Info: how many values are below 10?\n\nsum(x &lt; 10)\n\n[1] 5\n\nwhich(x &lt; 10)\n\n[1]  4  5  6  9 10\n\n\nUpdate values: turn all values of 3 into a 4:\n\n\nYour Turn\nmake all square values in x negative:\n\nWrite a function is_square that takes a numeric vector x and returns a vector of TRUE/FALSE for each element in x (TRUE: element is square, FALSE: element is not a square number)\nupdate square values by their negative number\n\nx\n\n\n [1] 11 25 18  4  1  5 17 22  4  9\n\n\nis_square(x):\n\n\n [1] FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n\n\nupdated x:\n\n\n [1]  11 -25  18  -4  -1   5  17  22  -4  -9\n\n\n\n\nHomework - Review\n\nin Canvas, accept the Github Classroom link to homework #3\nClone the repository to your local machine\nRender the file index.qmd\n\n\n\nHomework - Cipher\n\nNot all statements that execute are correct (Part 1: fix mistakes)\nPart 2: write a decoder\nPart 3: Decode the secret message!\n\n\n\n\nNext Time\n\nContinue working on Homework 3\nSelf Assessment quiz due Thursday"
  },
  {
    "objectID": "slides/04a-input.html",
    "href": "slides/04a-input.html",
    "title": "Reading In Data",
    "section": "",
    "text": "Homework 3\n\nSolutions look good (feedback on anything you pushed to github)\nMini stumble block: the punctuation vector\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \":\")\nDo not just delete the \"\"\"\ninstead use single quotes '\"' or backslash \"\\\"\"\n\n\nTopics to Know\n\nTypes of data formats\n(raw text, binary file, spreadsheet, database, non-tabular data)\nHow to read in raw text files (fixed width vs. delimited)\nHow to read in spreadsheets\nRecognize binary files (e.g. Rdata or RDS)\n\nReading: data input\n\n\nHomework - Reading Data with Cookies\n\nMake sure to accept the homework by following the Github classroom link\nFocus on asking questions about your data (and documenting them)\nWhat weird stuff can you find?\n\n\n\n\nNext Time\n\nContinue working on Homework 4\nRead the EDA chapter if you haven’t already"
  },
  {
    "objectID": "slides/05a-graphics.html",
    "href": "slides/05a-graphics.html",
    "title": "Creating Good Graphics",
    "section": "",
    "text": "Homework 4\nWhere are you at?\n\n\nGraphics week!\nYou should have read:\n\nGraphics\n\nFocus on relationships between variables\nGrammar of Graphics vs. Manual plot specification/mapping\nExploratory data analysis\n\nGood Graphics\n\nPerception & Cognition\nUse the least complicated chart that still works\n\n\n\n\nMake Graphics!\n\nPart I: Make visual summaries for two new data sets and think about mappings\nPart II: Use your knowledge to create the worst!\n\n\n\nResources for this week\n\nR and Python Graph Galleries\nUgly Chart Challenge variant example from last semester’s graduate class\nCustomizing ggplot2 plots\n\nAlso an RStudio addin package - ggThemeAssist\n\nCustomizing seaborn plots\n\n\n\nHomework\n\n\nExplanations! What can you see from the plot? What is its purpose?\n\n\n\n\n\nHomework rubric\n\n\n\nNext time\n\nContinue working on homework assignment\nBrainstorming: 🧠⛈️\n\nhow to make the textbook 📖 more effective\nwhat will motivate you to read it before class? 😜"
  },
  {
    "objectID": "slides/06a-graphics.html",
    "href": "slides/06a-graphics.html",
    "title": "Creating Good Graphics",
    "section": "",
    "text": "Survey Results\n\nWhat is helping me to learn in this class?\n\ntextbook for reading quiz\ntrouble-shooting in class\nwork time in class\nexamples in class\ntalking with classmates\n\n\n\n\nWhat am I doing to improve my learning in the course?\n\nask questions\nstarting homework early, think about it during the week\nlook things up: textbook, resources outside the class (videos, other articles)\ncheck homework before class to see if there are immediate questions\n\n\n\n\nWhat changes are needed in this course to improve learning?\n\nMore clarity -\nHow does homework tie in with requirements?\nclearer materials\nSample solution for homework\n\n\n\n\nWhat do I need to do to improve my learning in this course?\n\nAsk more questions\nPractice coding\nDo readings earlier, try to absorb more information from readings\nBe more present in class/pay better attention\n\n\nSome Logistics\nHomework #5 due date: Thursday night (11:59 pm)\nAll subsequent due-dates for homework assignments will be Thursday night\nKeep due-dates for readings and quizzes on Tuesday\nPlan for Thursdays: - if there are questions on the current homework assignment, work on that, - start on the new assignment\n\n\nHomework: Graphics\n\nHow does the homework tie to the readings?\nWorking on skills: how to make graphics\nWork on concepts: what are mappings, and how do they effect the conclusions\nWork on presentation: what are more effective ways of presenting information\n\n\n\nHomework rubric\n\n\n\nGraphics week homework\n\nPart I: Make visual summaries for two new data sets and think about mappings\nPart II: Use your knowledge to create the worst!\n\n\n\nData Exploration\nMake charts for all variables that are listed by name:\ngroundhogs.csv\n\nlat, long\ncountry\nisGroundhog\nactive\npredictionsCount\n\npredictions.csv\n\nisGroundhog\nyear\nshadow\n\n\n\nVariable active\n\nlibrary(tidyverse)\ngroundhogs &lt;- read.csv(\"https://raw.githubusercontent.com/stat-assignments/eda-groundhogs/97ab0e01b64aa3a1749247983a9b05a0c30b5c0c/groundhogs.csv\")\ngroundhogs %&gt;% ggplot(aes(x = active)) + geom_bar()\n\n\n\n\n\n\n\n\nThis is a barchart of the variable active, the variable is mapped to the x axis, the count for each bar (corresponding to the height of the bars) is mapped to y. Finding: Very few (2) groundhogs are not active.\n\n\nProbabilities and Agreement\nAnswer the following two questions using charts. Explain your chart, and explain how it answers the question.\nDo different groundhogs have different probabilities of predicting 6 more weeks of winter?\nHow much do North American groundhogs tend to agree on their predictions?\n\n\n\nDo different groundhogs have different probabilities of predicting 6 more weeks of winter?\n\npredictions &lt;- read.csv(\"https://raw.githubusercontent.com/stat-assignments/eda-groundhogs/refs/heads/main/groundhog-predictions.csv\")\n\npredictions %&gt;% \n  mutate(name = reorder(factor(name), name, length)) %&gt;%\n  ggplot(aes(x = name)) + geom_bar() +\n  geom_bar(aes( weight = shadow), fill = \"darkorange\") + \n  theme(axis.text.x = element_text(angle = 60, hjust = 1)) + \n  ggtitle(\"Number of predictions\\nNumber of times seeing a shadow in orange\")\n\n\n\n\n\n\n\n\nWhat about missing values in the shadow variable?\n\n\n\nHow do we need to change the previous chart?\n\npredictions &lt;- read.csv(\"https://raw.githubusercontent.com/stat-assignments/eda-groundhogs/refs/heads/main/groundhog-predictions.csv\")\n\npredictions %&gt;% \n  filter(!is.na(shadow)) %&gt;%\n  mutate(name = reorder(factor(name), name, length)) %&gt;%\n  ggplot(aes(x = name)) + geom_bar(aes(fill=factor(shadow)), position = \"fill\") +\n  theme(axis.text.x = element_text(angle = 60, hjust = 1)) \n\n\n\n\n\n\n\n\nlimitations: different groundhogs have made very different number of predictions (and for different years)\n\n\n\nHow much do North American groundhogs tend to agree on their predictions?\n\n\n\n\n\n\n\n\n\n\n\n\nFor years since 2010 … in each year close to 50/50 shadow/noshadow prediction - that’s the least amount of agreement we can possibly get!\n\n\n\n\n\n\n\n\n\n\n\n\nBut … when we color points by prediction, there seems to be regional agreement\n\n\n\n\n\n\n\n\n\nIs this perceived agreement real?\n\n\n\nWhich plot shows the most geographic agreement?\n\n\n\n\n\n\n\n\n\n\n\n\nyear was 2023 data is in 2\n… maybe there is not even regional geographic agreement between the predictions.\nLineups help us to calibrate our eyes and distinguish random patterns from real visual findings.\n\n\nResources for this week\n\nR and Python Graph Galleries\nUgly Chart Challenge variant example from last semester’s graduate class\nCustomizing ggplot2 plots\n\nAlso an RStudio addin package - ggThemeAssist\n\nCustomizing seaborn plots\n\n\n\nHomework\n\n\nExplanations! What can you see from the plot? What is its purpose?\n\n\n\n\n\nNext time\n\nContinue working on homework assignment\nBrainstorming: 🧠⛈️\n\nhow to make the textbook 📖 more effective\nwhat will motivate you to read it before class? 😜"
  }
]