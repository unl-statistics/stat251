{
  "hash": "012347d7c3d61384a2f57fe03a5986e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Reading In Data\nauthor: Stat 251\ncategories: slides\nengine: knitr\nformat:\n  revealjs:\n    navigation-mode: vertical\n    logo: N.svg\n    theme: inverse.scss\n    includes:\n      in_header: header.html\ndate: '2025-02-11'\n---\n\n\n\n# Topics to Know\n\n- Types of data formats    \n(raw text, binary file, spreadsheet, database, non-tabular data)\n- How to read in raw text files (fixed width vs. delimited)\n- How to read in spreadsheets\n- Recognize binary files (e.g. Rdata or RDS)\n\n[Reading](https://srvanderplas.github.io/stat-computing-r-python/part-wrangling/01-data-input.html)\n\n\n# Homework - Reading Data with Cookies\n\n- Make sure to accept the homework by following the Github classroom link\n\n- Focus on asking questions about your data (and documenting them)\n- What weird stuff can you find?\n\n\n\n```{=html}\n<iframe width=\"100%\" height = \"600px\" src=\"04-cookies.html\"></iframe>\n```\n\n\n\n\n# Next Time\n\n- Continue working on Homework 4\n  \n- Read the [EDA chapter](https://srvanderplas.github.io/stat-computing-r-python/part-wrangling/02a-eda.html) if you haven't already\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}