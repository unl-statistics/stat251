{
  "hash": "62b079d4f0b489862464ea9dcf30fbe9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Introduction\nauthor: Stat 251\ncategories:\n- slides\n- Week01\nformat:\n  revealjs:\n    navigation-mode: vertical\n    logo: N.svg\n    includes:\n      in_header: header.html\ndate: '2025-01-23'\npub-date: '2023-01-01'\n---\n\n\n\n# Introductions\n\n## Introduce yourself!\n\n- Name / Year / Major\n\n- What do you hope to learn in this class?\n\n- Previous computing experience?\n\n- Is a poptart a ravioli? Why or why not?\n\n## My Introduction\n\n- Heike Hofmann\n\n- Professor in Statistics \n\n- At UNL since August, I was at ISU for 20 years\n\n- first computer language was Pascal :) \n\n- R user since 1996, Python user (? I have learned it four times by now)\n\n\n## On PopTarts and Ravioli:\n\n![[[The Cube Rule of Food](https://www.reddit.com/r/coolguides/comments/ri0kvs/the_cube_rule_of_food_identification/), from Reddit]{.small}](fig/cube_rule_food.jpg)\n\nThus, a PopTart is a calzone. \n\n# Syllabus\n\n## Contact Info\n\n- Email: [hhofmann4@unl.edu](mailto:hhofmann4@unl.edu?subject=Stat251)\n\n- Office: 346D Hardin Hall North Wing\n\n- Office Hours: TBD    \n\n## Course Objectives\n\n:::  {.fragment}\n1. Use appropriate visualizations to explore and assess data and its applicability to a problem\n:::\n\n:::  {.fragment}\n2. Write code to reshape and reformat moderately complex and/or messy data in a reproducible manner\n:::\n\n:::  {.fragment}\n3. Create graphical displays to explore data, assess statistical models, and present model results \n:::\n\n:::  {.fragment}\n4. Adapt pre-existing code for sophisticated visualizations to new data. \n:::\n\n## Course Objectives\n\n:::  {.fragment}\n5. Implement an algorithm or procedure for data modification given in pseudocode \n:::\n\n:::  {.fragment}\n6. Write pseudocode to describe and document modifications made to a data set \n:::\n\n:::  {.fragment}\n7. Access documentation and source code to determine how software works (or why it doesn't) \n:::\n\n:::  {.fragment}\n8. Identify problems in a data set that limit the analyses which are appropriate for the data\n:::\n\n## Textbook\n\n[https://srvanderplas.github.io/stat-computing-r-python/](https://srvanderplas.github.io/stat-computing-r-python/)\n\n![](https://srvanderplas.github.io/stat-computing-r-python/build_deps/cover.png){fig-alt=\"Cover image of the textbook\"}\n\n## Course Materials\n::: columns\n::: column\n- Canvas \n  - quizzes\n  - weekly readings\n  - homework/exam/project submission\n  \n:::\n\n::: column\n- [Course site](https://unl-statistics.github.io/stat251/)\n  - slides\n  - weekly readings\n  - homework/exam/project descriptions\n  \n:::\n\n[Everything should be cross-linked properly but email me if there's an issue.]{.small}\n:::\n\n## Class Schedule\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-Syllabus-and-Introductions_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Outline  {.scrollable .smaller}\nSubject to change based on the events of the semester...\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nDate     Topic                         \n-------  ------------------------------\nJan 21   Getting Started               \nJan 23   Version Control               \nJan 28   Review: Functions             \nJan 30   Review: Functions             \nFeb  4   Review: Data Structures       \nFeb  6   Review: Data Structures       \nFeb 11   Data Input                    \nFeb 13   Data Input                    \nFeb 18   Data Visualization            \nFeb 20   Data Visualization            \nFeb 25   Data Cleaning                 \nFeb 27   Data Cleaning                 \nMar  4   Exam 1 Questions              \nMar  6   Strings                       \nMar 11   Strings                       \nMar 13   Midterm Due                   \nMar 25   Reshaping Data                \nMar 27   Reshaping Data                \nApr  1   Joining Data                  \nApr  3   Joining Data                  \nApr  8   Dates and Times               \nApr 10   Dates and Times               \nApr 15   Project Work                  \nApr 17   Project Work                  \nApr 22   Lists                         \nApr 24   Lists                         \nApr 29   Project Work                  \nMay  1   Screencast Video Due          \nMay  6   Spatial Data                  \nMay  8   Peer Review of Screencast Due \nMay 14   Scheduled Final               \n\n\n:::\n:::\n\n\n\n## Grades\n\n\nAssignments | Weight\n----- | -----\nReading Quizzes | 10%\nWeekly Homework & Participation | 50% \nMidterm Exam | 20%\nProject | 20%\n\nApproximately Weekly Homework -- started in class\n\n## Academic Integrity Policy {.r-fit-text}\n\n- You may (should!) work with each other on homework assignments\n\n- Work alone on exams\n\n- You must be able to explain anything you submit    \n[At my discretion, I can use a one-on-one discussion of your work to replace the grade for that work.]{.smaller}\n\n- ChatGPT, StackOverflow, Google are tools, but they do not help you think\n\n# University Policies\n\nhttps://executivevc.unl.edu/academic-excellence/teaching-resources/course-policies/\n\n# Setting Up\n\n## Install Course Software\n\n[Textbook Chapter 2](https://srvanderplas.github.io/stat-computing-r-python/part-tools/02-setting-up-computer.html)\n\n\n\n```{=html}\n<iframe width=\"100%\" height=\"600px\" src=\"https://srvanderplas.github.io/stat-computing-r-python/part-tools/02-setting-up-computer.html\" title=\"Setting Up\"></iframe>\n\n```\n\n\n\n## Next Time\n\nWe'll work on [Version Control with Git](https://srvanderplas.github.io/stat-computing-r-python/part-tools/05-git-and-github.html)\n\n::: columns\n::: column\nPlease read before class: \n\n- [Computer Basics](https://srvanderplas.github.io/stat-computing-r-python/part-tools/01-computer-basics.html)\n- [Scripts and Notebooks](https://srvanderplas.github.io/stat-computing-r-python/part-tools/03-scripts-notebooks.html)\n- [RStudio's Interface](https://srvanderplas.github.io/stat-computing-r-python/part-tools/04-Rstudio-interface.html)\n- [Version Control with Git](https://srvanderplas.github.io/stat-computing-r-python/part-tools/05-git-and-github.html)\n:::\n::: column\n![[Octocat [Image Source](https://github.com/octocat)]{.small}](fig/octocat.png)\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}